<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Raymond Cheng</title>
    <description>Homepage for Raymond Cheng
</description>
    <link>https://www.raymondcheng.net/</link>
    <atom:link href="https://www.raymondcheng.net/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 10 Aug 2022 01:17:16 +0000</pubDate>
    <lastBuildDate>Wed, 10 Aug 2022 01:17:16 +0000</lastBuildDate>
    <generator>Jekyll v4.2.0</generator>
    
      <item>
        <title>How to choose a localization approach for your React application</title>
        <description>&lt;p&gt;Choosing how to add localization to your application can be a complicated decision, because there are so many options out there. From code-based frameworks to third-party services that automatically rewrite your HTML, there is no silver bullet for localization. At &lt;a href=&quot;https://www.plasmic.app/&quot;&gt;Plasmic&lt;/a&gt;, we have been exploring the many options to better inform how we can support localization for our own &lt;a href=&quot;https://studio.plasmic.app/&quot;&gt;application&lt;/a&gt;. Many tutorials assume you want to already want to use a code framework, like react-i18next, but that has implications for your team’s workflow. In this blog post we will survey different localization techniques you may be considering for your React application and discuss some of the trade-offs.&lt;/p&gt;

&lt;h2 id=&quot;why-localize&quot;&gt;Why localize?&lt;/h2&gt;

&lt;p&gt;There are a number of considerations as you look to deploy your application to a global audience. First and foremost, translating the text on your app is critical to support the many non-English speaking users around the world, opening up new markets. Furthermore, displaying prices, dates, times, keyboard shortcuts, and graphics can greatly improve the user experience.&lt;/p&gt;

&lt;h2 id=&quot;comparing-approaches-to-localization-in-react&quot;&gt;Comparing approaches to localization in React&lt;/h2&gt;

&lt;p&gt;When choosing an approach, there are a number of factors that you may want to consider:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Who writes the text on your app?&lt;/strong&gt;
Do engineers drive the process of choosing what text gets displayed or is there significant marketing copy that is owned by non-developers?&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;How often does the copy change?&lt;/strong&gt;
Does most of the text consist of short strings that are reused throughout the application (e.g. button labels)? Or are there frequent changes to marketing copy?&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Who does the translation?&lt;/strong&gt;
Do you plan on hiring an outside agency or vendor to translate the strings? Or do you want to coordinate a crowd-sourcing effort to translate your strings?&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;How much engineering capacity do you have?&lt;/strong&gt;
Is there ongoing engineering capacity in the future, or will there only be engineering support at setup time?&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;How important is website performance?&lt;/strong&gt;
Optimizing your website performance may incur additional implementation costs compared to automated solutions.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Are there other systems that you need to integrate with?&lt;/strong&gt;
Such as content management systems (CMS), databases, or web hosting platforms&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Do you need to integrate localization below the hood?&lt;/strong&gt;
HTML attributes, component props, or dynamically generated strings may also need translation in customized configurations.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the following sections, we’ll compare the high-level categories of approaches: code-based frameworks, headless content management systems (CMS), and automated services.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt;Code-based&lt;/th&gt;
      &lt;th&gt;Headless CMS&lt;/th&gt;
      &lt;th&gt;Automated Services&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Setup difficulty&lt;/td&gt;
      &lt;td&gt;High&lt;/td&gt;
      &lt;td&gt;High&lt;/td&gt;
      &lt;td&gt;Low&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Requires developers to deploy new translations&lt;/td&gt;
      &lt;td&gt;Yes&lt;/td&gt;
      &lt;td&gt;No&lt;/td&gt;
      &lt;td&gt;No&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Performance&lt;/td&gt;
      &lt;td&gt;Good&lt;/td&gt;
      &lt;td&gt;Good&lt;/td&gt;
      &lt;td&gt;Varies&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Customizability (e.g. for HTML attributes)&lt;/td&gt;
      &lt;td&gt;High&lt;/td&gt;
      &lt;td&gt;High&lt;/td&gt;
      &lt;td&gt;Low&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;code-based-localization-frameworks&quot;&gt;Code-based localization frameworks&lt;/h2&gt;

&lt;p&gt;The natural choice for a React code base is to reach for a i18n library, such as &lt;a href=&quot;https://react.i18next.com/&quot;&gt;react-i18next&lt;/a&gt;, &lt;a href=&quot;https://formatjs.io/docs/react-intl/&quot;&gt;react-intl&lt;/a&gt;, or &lt;a href=&quot;https://www.notion.so/How-to-choose-a-localization-approach-for-your-React-application-ed1d630b18484117a1d6817ba658a687&quot;&gt;lingui&lt;/a&gt;. There also framework-specific libraries, such as &lt;a href=&quot;https://www.npmjs.com/package/gatsby-plugin-i18n&quot;&gt;gatsby-plugin-i18n&lt;/a&gt; for &lt;a href=&quot;https://www.notion.so/How-to-choose-a-localization-approach-for-your-React-application-ed1d630b18484117a1d6817ba658a687&quot;&gt;Gatsby&lt;/a&gt;, and &lt;a href=&quot;https://www.notion.so/How-to-choose-a-localization-approach-for-your-React-application-ed1d630b18484117a1d6817ba658a687&quot;&gt;next-intl&lt;/a&gt; for &lt;a href=&quot;https://www.notion.so/How-to-choose-a-localization-approach-for-your-React-application-ed1d630b18484117a1d6817ba658a687&quot;&gt;Next.js&lt;/a&gt;. At a high-level, the architecture for most of these operate similarly, so I’ll use react-i18next code samples to illustrate the main concepts.&lt;/p&gt;

&lt;h3 id=&quot;code-how-it-works&quot;&gt;Code: How it works&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Translation files&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;At the core of your localization workflow are &lt;strong&gt;translation files&lt;/strong&gt;. These can be served as static files, or imported directly into code. While each library has different specifications for this file, at a high level translation files simply consist of strings used in the application, keyed by some unique identifier.&lt;/p&gt;

&lt;p&gt;For example in react-i18next, you might serve 1 file at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;public/locales/en/translation.json&lt;/code&gt; for English:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Welcome to react using react-i18next&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;part1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;To get started, edit &amp;lt;1&amp;gt;src/App.js&amp;lt;/1&amp;gt; and save to reload.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;part2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Switch language between english and german using buttons above.&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and another file at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;public/locales/de/translation.json&lt;/code&gt; for German:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Willkommen zu react und react-i18next&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;part1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Um loszulegen, ändere &amp;lt;1&amp;gt;src/App(DE).js&amp;lt;/1&amp;gt; und speichere um neuzuladen.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;part2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Wechsle die Sprache zwischen deutsch und englisch mit Hilfe der beiden Schalter.&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Library API&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Developers then initialize the library with your configuration. In the following example, we choose to load the translation files over HTTP and leverage a language detector that automatically sets the locale based on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Accept-Language&lt;/code&gt; HTTP header.&lt;/p&gt;

&lt;div class=&quot;language-tsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i18n&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;i18next&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;initReactI18next&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;react-i18next&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Backend&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;i18next-http-backend&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;LanguageDetector&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;i18next-browser-languagedetector&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;i18n&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Backend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;LanguageDetector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;initReactI18next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;fallbackLng&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;en&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;interpolation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;escapeValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// not needed for react as it escapes by default&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i18n&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In the codebase, developers can use a translation function to look up strings for the user’s locale.&lt;/p&gt;

&lt;div class=&quot;language-tsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useTranslation&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;react-i18next&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MyComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i18n&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useTranslation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Welcome to React&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Many libraries also include a React component that you can directly use in the JSX tree:&lt;/p&gt;

&lt;div class=&quot;language-tsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Trans&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;react-i18next&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MyComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Trans&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
      Welcome to &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;React&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Trans&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Build-time static analysis&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For developer convenience, most libraries also include tools to perform static analysis of the source code to extract translation keys/values into translation files.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;i18next &lt;span class=&quot;s1&quot;&gt;'app/**/*.{js,hbs}'&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'lib/**/*.{js,hbs}'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-oc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;While this can automate the aggregation of translation keys, developers will still need to populate translation files for each language they want to support.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sourcing translations&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Some teams manage translation themselves on a platform like &lt;a href=&quot;https://www.notion.so/How-to-choose-a-localization-approach-for-your-React-application-ed1d630b18484117a1d6817ba658a687&quot;&gt;Crowdin&lt;/a&gt;. Many teams will outsource their translation to an outside service. Some services leverage automated machine translations, such as &lt;a href=&quot;https://cloud.google.com/translate/&quot;&gt;Google Cloud Translation API&lt;/a&gt;. Other services, like &lt;a href=&quot;https://www.notion.so/How-to-choose-a-localization-approach-for-your-React-application-ed1d630b18484117a1d6817ba658a687&quot;&gt;Locize&lt;/a&gt;, &lt;a href=&quot;https://www.notion.so/How-to-choose-a-localization-approach-for-your-React-application-ed1d630b18484117a1d6817ba658a687&quot;&gt;Lokalise&lt;/a&gt; or &lt;a href=&quot;https://www.notion.so/How-to-choose-a-localization-approach-for-your-React-application-ed1d630b18484117a1d6817ba658a687&quot;&gt;Localazy&lt;/a&gt; will help you work with translation agencies to manually translate your files. In any of these cases, a teammate simply sends their translation files to an outside service. The developer can then commit the translated files back into code for testing.&lt;/p&gt;

&lt;p&gt;Some translation platforms provide more seamless integration into code, removing the need to manually send translation files. For example, Locize can be loaded as a “backend” plugin into i18next so that translation files are fetched directly from their CDN. This way, users can directly modify strings, source translations, and publish results all from a single web application.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import i18next from &lt;span class=&quot;s1&quot;&gt;'i18next'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
import Backend from &lt;span class=&quot;s1&quot;&gt;'i18next-locize-backend'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

i18next
  .use&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Backend&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  .init&lt;span class=&quot;o&quot;&gt;({&lt;/span&gt;
    // ...other options
    backend: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      projectId: &lt;span class=&quot;s1&quot;&gt;'[PROJECT_ID]'&lt;/span&gt;,
      apiKey: &lt;span class=&quot;s1&quot;&gt;'[API_KEY]'&lt;/span&gt;,
      referenceLng: &lt;span class=&quot;s1&quot;&gt;'[LNG]'&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;code-pros&quot;&gt;Code: Pros&lt;/h3&gt;

&lt;p&gt;Implementing internationalization in code (i.e. via a library) has a number of benefits&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Customizability&lt;/strong&gt;: Developers have full control over how internationalization is implemented. At its core, i18n libraries simply provide a lookup table for strings, which developers can use anywhere in the codebase (e.g. HTML attributes, component props, dynamically-generated strings), anywhere in the application architecture (e.g. client-side or server-side), and at any time (e.g. at request time, at build-time, or on client load).&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Optimized performance&lt;/strong&gt;: Developers can tailor the i18n setup to the performance needs of their application. When paired with static site generation (SSG), developers can implement internationalization in a way that incurs virtually no performance impact to the user.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;code-cons&quot;&gt;Code: Cons&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Implementation cost&lt;/strong&gt;: Developers are required to at least initially set up internationalization for their application, which includes a number of factors to consider, such as language detection, routing, performance, and instrumentation.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;High friction&lt;/strong&gt;: Because translation files are often checked into code, developers are also required to make any changes and test the results. When developers are not the primary authors of text copy, this can lead to higher friction to production.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;headless-cms-based-approaches&quot;&gt;Headless CMS-based approaches&lt;/h2&gt;

&lt;p&gt;Headless content management systems (CMS), such as &lt;a href=&quot;https://www.notion.so/How-to-choose-a-localization-approach-for-your-React-application-ed1d630b18484117a1d6817ba658a687&quot;&gt;Contentful&lt;/a&gt; or &lt;a href=&quot;https://www.notion.so/How-to-choose-a-localization-approach-for-your-React-application-ed1d630b18484117a1d6817ba658a687&quot;&gt;Sanity&lt;/a&gt;, often support writing content in multiple languages. By storing your translated content in a CMS, this simplifies content editing for non-developers and translators, who can manage content through a web application.&lt;/p&gt;

&lt;h3 id=&quot;cms-how-it-works&quot;&gt;CMS: How it works&lt;/h3&gt;

&lt;p&gt;Headless CMS systems, like Contentful or Sanity, require a developer to integrate their system into an existing codebase. However once set up, non-developers can make new content or edit existing content entirely from the CMS web application.&lt;/p&gt;

&lt;p&gt;For example, in Contentful, you can manage which languages and locales your application supports.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/diagrams/react-localization/01-contentful-add-locale.png&quot; alt=&quot;add-locale&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After you specify which languages your site supports, the content editor allows you to add translations to your content.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/diagrams/react-localization/02-contentful-edit-content.png&quot; alt=&quot;edit-content&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Developers then retrieve localized content via the REST API, by specifying a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;locale&lt;/code&gt;parameter:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; GET &lt;span class=&quot;s2&quot;&gt;&quot;https://cdn.contentful.com/spaces/&amp;lt;SPACE_ID&amp;gt;/entries/&amp;lt;ENTRY_ID&amp;gt;?access_token=&amp;lt;CONTENT_DELIVERY_KEY&amp;gt;&amp;amp;locale=de-AT&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Structured CMS data can then be used to populate the page. For example in Gatsby it might look like this (&lt;a href=&quot;https://github.com/mccrodp/gatsby-starter-contentful-i18n/blob/master/src/pages/index.de.js&quot;&gt;source&lt;/a&gt;):&lt;/p&gt;

&lt;div class=&quot;language-tsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// src/pages/index.de.js&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;IndexPage&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;deProductEdges&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;german&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;deProductEdges&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;german&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;edges&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Layout&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;marginBottom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rhythm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;de&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;h3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;deProductEdges&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Product&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pageQuery&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;graphql&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`
  query PageDeQuery {
    site {
      siteMetadata {
        languages {
          defaultLangKey
          langs
        }
      }
    }
    german: allContentfulProduct(filter: { node_locale: { eq: &quot;de&quot; } }) {
      edges {
        node {
          id
          contentful_id
          node_locale
          productName {
            productName
          }
          image {
            resolutions(width: 75) {
              ...GatsbyContentfulResolutions
            }
          }
        }
      }
    }
  }
`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;how-are-cms-and-code-based-approaches-different&quot;&gt;&lt;strong&gt;How are CMS and code-based approaches different?&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;CMS-based approaches and code-based approaches share a number of similarities. Both store translated content as structured data, which developers can retrieve by locale. There also exist easy-to-use web applications to manage translated data.&lt;/p&gt;

&lt;p&gt;However they differ predominantly in the developer interface, leading to drastically different code architectures. For code-based approaches, developers operate at the granularity of strings. Every string needs to be wrapped with a call to a i18n lookup function to find the proper translation.&lt;/p&gt;

&lt;p&gt;In contrast, CMS systems allow you to define content types that embody a group of data, such as a blog post or product entry. When you retrieve data from a CMS, you get the result as a translated object, which you can use directly. While these APIs are different today, I anticipate future libraries to take from the best of both worlds.&lt;/p&gt;

&lt;h3 id=&quot;cms-pros&quot;&gt;CMS: Pros&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Customizability&lt;/strong&gt;: Developers have full control over how internationalization is implemented and how localized content is displayed.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Optimized performance&lt;/strong&gt;: Developers can optimize the i18n setup to suit the performance needs of their application, similar to code-based frameworks.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Easy editing&lt;/strong&gt;: Because data is stored in the CMS, non-developers can easily make changes to content. When paired with webhooks, the CMS can also trigger builds and deployments, all without getting a developer involved.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;code-cons-1&quot;&gt;Code: Cons&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Initial setup costs&lt;/strong&gt;: Developers are needed to integrate localized content into the application, which will vary depending on application.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;automated-services&quot;&gt;Automated services&lt;/h2&gt;

&lt;p&gt;There are a number of services that take it another step further, automating the collection of all strings from a live website in production, as well as dynamically rewriting the page with translations, such as &lt;a href=&quot;https://weglot.com/&quot;&gt;Weglot&lt;/a&gt;, &lt;a href=&quot;https://localizejs.com/&quot;&gt;Localize&lt;/a&gt;, and &lt;a href=&quot;https://gtranslate.io/&quot;&gt;Gtranslate&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;automated-how-it-works&quot;&gt;Automated: How it works&lt;/h3&gt;

&lt;p&gt;These automated services typically include a library that users can add to their website. For example, the Weglot integration involves adding the following script to your document &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;head&amp;gt;&lt;/code&gt;(&lt;a href=&quot;https://support.weglot.com/article/333-javascript-integration-setup&quot;&gt;Source&lt;/a&gt;).&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;script &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://cdn.weglot.com/weglot.min.js&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&amp;lt;/script&amp;gt;
&amp;lt;script&amp;gt;Weglot.initialize&lt;span class=&quot;o&quot;&gt;({&lt;/span&gt; api_key: &lt;span class=&quot;s1&quot;&gt;'YOUR_API_KEY'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;On page load, this script will detect all of the visible strings in your web pages and load them into a dashboard. The service will facilitate translations (either by machine or humans), which can all be managed from the web app. Once strings have been translated, future loads of the web page will also detect the user’s locale and automatically rewrite strings in the DOM to reflect the translations.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/diagrams/react-localization/03-weglot-translate.jpg&quot; alt=&quot;weglot-translate&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Some services provide a server-side option. Instead of rewriting strings via client-side scripts, you configure your DNS to point to a translation proxy. This proxy server will similarly detect strings, rewrite the page, and cache content, which may lead to better website performance.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/diagrams/react-localization/04-weglot-dns.png&quot; alt=&quot;weglot-dns&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Note: Many of these services can also be used from a developer API without the integration script. In this case, you can treat the service similarly to a CMS like above.&lt;/p&gt;

&lt;h3 id=&quot;automated-pros&quot;&gt;Automated: Pros&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Simple setup&lt;/strong&gt;: Setup simply involves adding a script tag into your document header.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Easy to use&lt;/strong&gt;: Because strings are automatically detected, users can manage translations without changing their existing workflow.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;automated-cons&quot;&gt;Automated: Cons&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Performance&lt;/strong&gt;: If using client-side scripts, pages are dynamically rewritten at runtime on the client, which may result in noticeable delays to the user.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Limited customization&lt;/strong&gt;: Because the integration scripts embody hard-coded functionality, there is often less ability to adapt the library for customized functionality.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;leveraging-plasmic-for-localization&quot;&gt;Leveraging Plasmic for localization&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.plasmic.app/&quot;&gt;Plasmic&lt;/a&gt; is a visual builder for the web, which makes it easy for content editors and designers to build and iterate on pages in a WYSIWYG editor, rendered within your existing website. Similar to other headless CMS systems, Plasmic enables you to support multiple locales for each webpage by &lt;a href=&quot;https://www.notion.so/High-Performance-Personalization-with-Next-js-Middleware-ce9f008bc11f4ec392fa2ee1fe580e7a&quot;&gt;creating new variants&lt;/a&gt;. This way, non-developers can visually design and edit the entire webpage in a collaborative environment.&lt;/p&gt;

&lt;p&gt;However, Plasmic’s support for localization goes much deeper. We can also import your translation function from your code-based localization framework directly into Plasmic as a prop.&lt;/p&gt;

&lt;div class=&quot;language-tsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useTranslation&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;react-i18next&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i18n&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useTranslation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;translator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PlasmicTranslator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;opts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;defaultValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;opts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;PlasmicRootProvider&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;translator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;translator&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;...&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;PlasmicRootProvider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Once registered, you can leverage these localized strings from your Plasmic project! Plasmic opens up the ability to leverage the best of both worlds from code-based approaches to headless CMS’s. For more details, see our &lt;a href=&quot;https://www.notion.so/High-Performance-Personalization-with-Next-js-Middleware-ce9f008bc11f4ec392fa2ee1fe580e7a&quot;&gt;Plasmic localization guide&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;choosing-an-approach&quot;&gt;Choosing an approach&lt;/h2&gt;

&lt;p&gt;No single solution will be best approach in all use cases. Often times, the decision relates to where you want a developer to sit in the workflow, if at all. Automated solutions provide the simplest user experience, but may not work well for all use cases. Code frameworks and headless CMS solutions provide more customizability, but require developers to at least perform the setup. Regardless of which approach you choose, localization is one of the best ways to quickly open up new markets to your application.&lt;/p&gt;
</description>
        <pubDate>Tue, 09 Aug 2022 08:40:05 +0000</pubDate>
        <link>https://www.raymondcheng.net/posts/react-localization.html</link>
        <guid isPermaLink="true">https://www.raymondcheng.net/posts/react-localization.html</guid>
        
        <category>guides</category>
        
        <category>web</category>
        
        
        <category>posts</category>
        
      </item>
    
      <item>
        <title>High Performance Personalization with Next.js Middleware</title>
        <description>&lt;p&gt;In this blog post, we will show you how to implement personalization using &lt;a href=&quot;https://nextjs.org/docs/advanced-features/middleware&quot;&gt;Next.js middleware&lt;/a&gt;. Traditionally, personalization was implemented on the server, which may incur many hundreds of milliseconds of latency before the user receives the content. With Next.js middleware and static site generation (SSG), we can serve rich personalized experiences entirely from the edge (i.e. CDN), resulting in significant performance improvements for your website and improved experiences for your users.&lt;/p&gt;

&lt;p&gt;The techniques in the tutorial should be generally applicable to any Next.js application. For simplicity, we will use &lt;a href=&quot;https://www.plasmic.app/&quot;&gt;Plasmic&lt;/a&gt;, a visual builder for the web, to quickly spin up different women’s and men’s versions of an e-commerce landing page. Plasmic makes it easy for content editors and designers to build and iterate on pages in a WYSIWYG editor, rendered within your existing website.&lt;/p&gt;

&lt;h3 id=&quot;why-personalize-your-website&quot;&gt;Why personalize your website?&lt;/h3&gt;

&lt;p&gt;Tailoring content to a user’s tastes, can vastly improve the user’s experiences on your website, which can ultimately improve your conversion rates. By parsing HTTP request headers, you can respond with different versions of the site to your users. For example:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Return user&lt;/strong&gt;: By setting a cookie on the first visit, subsequent visits can show special content for return users, such as an enticing promotion.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Geographical&lt;/strong&gt;: Depending on a user’s locale or geographic location (i.e. as determined by IP address), you can translate the text, show locally relevant content, and show customized pricing in local currencies.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Tech stack&lt;/strong&gt;: From the user agent of the browser, you can present different content to iPhone or Android users, such as download links.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;User info&lt;/strong&gt;: Once a user has logged in, then you can set cookies that contain information about the user, such as their gender or how often they shop on your website.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;how-it-works-under-the-hood&quot;&gt;How it works under the hood&lt;/h2&gt;

&lt;h3 id=&quot;what-is-nextjs-middleware&quot;&gt;What is Next.js middleware?&lt;/h3&gt;

&lt;div class=&quot;language-tsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// pages/_middleware.js&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;middleware&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Edit and run this at the edge!&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;cookies&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cookies&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Middleware is a new powerful addition to the architecture of Next.js applications, first introduced in Next.js 12. Middleware are arbitrary functions that you can write, which are executed on user HTTP requests before they hit the Next.js server. In practice, middleware functions are deployed to the cloud edge (i.e. CDN), on a platform like &lt;a href=&quot;https://vercel.com/&quot;&gt;Vercel&lt;/a&gt;. By running on the edge, middleware can quickly rewrite and reroute requests to the server, or respond directly to short-circuit the server. The fast performance comes with the trade-off of a &lt;a href=&quot;https://nextjs.org/docs/api-reference/edge-runtime&quot;&gt;limited runtime environment&lt;/a&gt;. Middleware have been used to perform fast bot detection, feature flags, analytics, routing, and A/B tests.&lt;/p&gt;

&lt;h3 id=&quot;fast-personalization-with-nextjs-static-generation&quot;&gt;Fast Personalization with Next.js Static Generation&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/img/diagrams/nextjs-personalization/comparison-diagram.png&quot; alt=&quot;comparison&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Middleware allows us to implement personalization entirely on the edge. The middleware transparently redirects different users to different versions of your application, such as men’s and women’s versions of an e-commerce store, based on data from the HTTP request headers. The diagram above shows how Next.js personalization works at a high level when paired with static site generation (SSG).&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The developer creates different versions of the page for different targeting parameters (e.g. men/women). With SSG, developers can push static pages to the content delivery network.&lt;/li&gt;
  &lt;li&gt;When a user first requests a page, the middleware will parse HTTP headers to determine which version of the page to serve.&lt;/li&gt;
  &lt;li&gt;The middleware transparently proxies the request to the route that serves the appropriate page.&lt;/li&gt;
  &lt;li&gt;Routes can either be served from the edge if built via SSG, or served from the server via server-side rendering (SSR). When routes are also served from the edge, users benefit from lower latencies to content.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In practice, the developer can implement each version as a separate route, and the middleware glues it all together.&lt;/p&gt;

&lt;h3 id=&quot;compared-to-traditional-approaches-server-side&quot;&gt;Compared to traditional approaches (server-side)&lt;/h3&gt;

&lt;p&gt;By leveraging &lt;strong&gt;static site generation (SSG)&lt;/strong&gt; and serving from the edge&lt;strong&gt;,&lt;/strong&gt; your personalized pages will be pre-generated and served close to your users, with all the performance benefits of your CDN. This configuration leads to significantly faster responses compared to server-side approaches, which require you to hit the origin server on every request.&lt;/p&gt;

&lt;h2 id=&quot;implementing-personalization-on-nextjs&quot;&gt;Implementing personalization on Next.js&lt;/h2&gt;

&lt;p&gt;For quick reference, see here for project assets of a working example:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://studio.plasmic.app/projects/nmaGnTcLgTRnTSEV33RJjp&quot;&gt;Plasmic Project&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/plasmicapp/nextjs-personalization-example&quot;&gt;GitHub Repo&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;step-1-install-nextjs&quot;&gt;Step 1: Install Next.js&lt;/h3&gt;

&lt;p&gt;First, make sure you are running at least version 12 of Next.js. An easy way to ensure this is to install the latest version:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;npm &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;next@latest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If this is your first Next.js project, follow this &lt;a href=&quot;https://nextjs.org/docs/getting-started&quot;&gt;quickstart guide&lt;/a&gt; to get your Next.js project up and running.&lt;/p&gt;

&lt;h3 id=&quot;step-2-build-your-customized-pages&quot;&gt;Step 2: Build your customized pages&lt;/h3&gt;

&lt;p&gt;Suppose you want the middleware to transparently route users visiting &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/marketing/&lt;/code&gt; to 1 of 3 possible paths:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pages/marketing/original.jsx&lt;/code&gt; ⇒ &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/marketing/original&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pages/marketing/women.jsx&lt;/code&gt; ⇒ &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/marketing/women&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pages/marketing/men.jsx&lt;/code&gt; ⇒ &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/marketing/men&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can copy the original page to these 3 routes and make your various edits to the respective pages. If you leverage SSG via &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;getStaticProps&lt;/code&gt;, then each of these pages will continue to be served from a CDN for best performance.&lt;/p&gt;

&lt;p&gt;With middleware, these routes are hidden to the user, who just visits &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/marketing/&lt;/code&gt;. The middleware will select the correct route and transparently proxy users.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/diagrams/nextjs-personalization/womens.png&quot; alt=&quot;womens-page&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Women’s marketing page&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/diagrams/nextjs-personalization/mens.png&quot; alt=&quot;mens-page&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Men’s marketing page&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;leveraging-plasmic&quot;&gt;Leveraging Plasmic&lt;/h3&gt;

&lt;p&gt;While you can use any JSX, for this example we’ll use Plasmic to quickly generate the men’s, women’s and generic versions of the page. In the &lt;a href=&quot;https://studio.plasmic.app/projects/nmaGnTcLgTRnTSEV33RJjp&quot;&gt;Plasmic project&lt;/a&gt;, We have duplicated the marketing page and set custom routes for each targeting combination. You should see 3 versions of the page: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/marketing/original&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/marketing/women&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/marketing/men&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/diagrams/nextjs-personalization/studio.png&quot; alt=&quot;plasmic-studio&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Because we are using static site generation, Plasmic generates code at build time so that static pages can be served from your CDN. If you are using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;next dev&lt;/code&gt;, the Plasmic Next.js plugin will also automatically rebuild on any detected changes from Plasmic Studio, allowing you to easily continuously edit your pages.&lt;/p&gt;

&lt;p&gt;You can then include these routes in your Next.js project, by configuring the Plasmic Next.js plugin. First install the plugin.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; @plasmicapp/loader-nextjs
&lt;span class=&quot;c&quot;&gt;# or yarn add @plasmicapp/loader-nextjs&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then add a catch-all page, which will pull the pages from Plasmic and render them via &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;getStaticProps&lt;/code&gt;. Note that we use the example project’s project ID and API token below. In order to use your own project, replace these 2 fields.&lt;/p&gt;

&lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// pages/[...catchall].tsx&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;react&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;initPlasmicLoader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;PlasmicComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;ComponentRenderData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;PlasmicRootProvider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;@plasmicapp/loader-nextjs&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;GetStaticPaths&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;GetStaticProps&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Error&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;next/error&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PLASMIC&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;initPlasmicLoader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;projects&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;nmaGnTcLgTRnTSEV33RJjp&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// ID of a project you are using&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;LaVkw3uGWUc47q7svO6bpTkApdpaDvR6hBMuewhmmvukHpuHQanR8wEtYvwWbhMugEX7Z1aS21bLvfe5S4wA&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// API token for that project&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Fetches the latest revisions, whether or not they were unpublished!&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Disable for production to ensure you render only published changes.&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;preview&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/**
 * Use fetchPages() to fetch list of pages that have been created in Plasmic
 */&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getStaticPaths&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;GetStaticPaths&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pages&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PLASMIC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fetchPages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;paths&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;catchall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;substring&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;})),&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;fallback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;blocking&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/**
 * For each page, pre-fetch the data we need to render it
 */&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getStaticProps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;GetStaticProps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;catchall&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;params&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;??&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// Convert the catchall param into a path string&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;plasmicPath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;catchall&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;catchall&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isArray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;catchall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;catchall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;plasmicData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PLASMIC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;maybeFetchComponentData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;plasmicPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;plasmicData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// This is a path that Plasmic knows about; pass the data&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// in as props&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;plasmicData&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;

      &lt;span class=&quot;c1&quot;&gt;// Using incremental static regeneration, will re-generate this page&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// after 300s&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;revalidate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// This is some non-Plasmic catch-all page&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/**
 * Actually render the page!
 */&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CatchallPage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;plasmicData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ComponentRenderData&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;plasmicData&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;plasmicData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;plasmicData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;entryCompMetas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Error&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;statusCode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;404&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pageMeta&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;plasmicData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;entryCompMetas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Pass in the data fetched in getStaticProps as prefetchedData&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;PlasmicRootProvider&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;loader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PLASMIC&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;prefetchedData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;plasmicData&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// plasmicData.entryCompMetas[0].name contains the name&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// of the component you fetched.&lt;/span&gt;
      &lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;PlasmicComponent&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pageMeta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;PlasmicRootProvider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;step-3-add-the-middleware&quot;&gt;Step 3: Add the middleware&lt;/h3&gt;

&lt;p&gt;Now we want to create middleware that will run against the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/marketing&lt;/code&gt; route. To do so, create the following file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/pages/marketing/_middleware.js&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-tsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// pages/marketing/_middleware.js&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;NextRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;NextResponse&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;next/server&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getPersonalizedRoute&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;../../util&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;middleware&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;NextRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Get the personalized route&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newRoute&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getPersonalizedRoute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cookies&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;geo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ua&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// Bypass if not found&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;newRoute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// Proxy to the appropriate route&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;NextResponse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rewrite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;newRoute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In the example above, we determine a personalized route based on the URL, cookies, geographical location, and user agent via &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;getPersonalizedRoute&lt;/code&gt; , which you’ll need to implement yourself. The middleware will transparently proxy to the appropriate page routes. If these pages are served from the edge, we can avoid a round trip to the origin server.&lt;/p&gt;

&lt;h3 id=&quot;step-4-deploy&quot;&gt;Step 4: Deploy&lt;/h3&gt;

&lt;p&gt;Now deploy your application to production. You can see the demo &lt;a href=&quot;https://github.com/plasmicapp/nextjs-personalization-example&quot;&gt;GitHub repository&lt;/a&gt; deployed here:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://nextjs-personalization-example.vercel.app/marketing&quot;&gt;https://nextjs-personalization-example.vercel.app/marketing&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: Because we don’t have a way to determine gender in this example, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;getPersonalizedRoute&lt;/code&gt; will just choose a random version and set a cookie.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;try-plasmic&quot;&gt;Try Plasmic!&lt;/h2&gt;

&lt;p&gt;With Next.js middleware, we can we can now implement personalization in a way that is both easy for developers as well as highly performant for users. With these lower costs, the bottleneck becomes your organization’s ability to create new personalized content. Plasmic makes it easy for anyone in your organization to rapidly create new experiences or fork your existing pages in a rich visual editor. You can create a free account to get started at
&lt;a href=&quot;https://studio.plasmic.app/&quot;&gt;https://studio.plasmic.app/&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 19 May 2022 08:40:05 +0000</pubDate>
        <link>https://www.raymondcheng.net/posts/nextjs-personalization.html</link>
        <guid isPermaLink="true">https://www.raymondcheng.net/posts/nextjs-personalization.html</guid>
        
        <category>guides</category>
        
        <category>web</category>
        
        
        <category>posts</category>
        
      </item>
    
      <item>
        <title>A/B Testing with Next.js middleware</title>
        <description>&lt;p&gt;In this blog post we will show you how to implement A/B testing using &lt;strong&gt;Next.js middleware&lt;/strong&gt;, first introduced in Next.js 12. When compared to other A/B testing frameworks, this method more easily fits into your existing developer workflows and inherits all of the performance benefits of Next.js, including static site generation (SSG). You’ll see that A/B tests don’t have to be onerous for either your users or your developers — every Next.js site can easily make measurable progress this way!&lt;/p&gt;

&lt;h2 id=&quot;what-is-nextjs-middleware&quot;&gt;What is Next.js middleware?&lt;/h2&gt;

&lt;div class=&quot;language-tsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// pages/_middleware.js&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;middleware&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Edit and run this at the edge!&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;cookies&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cookies&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Middleware is a new powerful addition to the architecture of Next.js applications. Middleware are arbitrary functions that you can write, which are executed on user HTTP requests before they hit the Next.js server. In practice, middleware functions are deployed to the cloud edge (i.e. CDN), on a platform like &lt;a href=&quot;https://vercel.com/&quot;&gt;Vercel&lt;/a&gt;. By running on the edge, middleware can quickly rewrite and reroute requests to the server, or respond directly to short-circuit the server. The fast performance comes with the trade-off of a &lt;a href=&quot;https://nextjs.org/docs/api-reference/edge-runtime&quot;&gt;limited runtime environment&lt;/a&gt;. Middleware have been used to perform fast bot detection, feature flags, analytics, routing, and A/B tests.&lt;/p&gt;

&lt;h3 id=&quot;ab-testing-using-nextjs-middleware&quot;&gt;A/B testing using Next.js middleware&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/img/diagrams/nextjs-ab-test/00-architecture.png&quot; alt=&quot;architecture&quot; /&gt;&lt;/p&gt;

&lt;figcaption align=&quot;center&quot;&gt;
  &lt;i&gt;
    Middleware functions run at the edge (i.e. CDN), providing a way to quickly re-route requests.
    When paired with SSG, the entire A/B test can be served from the edge.
  &lt;/i&gt;
&lt;/figcaption&gt;

&lt;p&gt;Middleware is the perfect tool for implementing A/B tests (also known as split tests). The middleware transparently redirects different users to different versions of your application, which you can use to assess how each version impacts your business metrics. The diagram above shows how Next.js A/B testing works at a high level when paired with SSG.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;When a user first requests a page, such as your homepage, the middleware will flip a coin to choose which version to serve.&lt;/li&gt;
  &lt;li&gt;The middleware transparently proxies the request to the appropriate variant and sets a cookie, so that subsequent requests from the same user see the same variant and the user is oblivious to the A/B test.&lt;/li&gt;
  &lt;li&gt;Routes can either be served at the edge if built via SSG, or served at the server via server-side rendering. When routes are also served from the edge, users benefit from lower latencies to content.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In practice, the developer can implement each variant that they want to test as a separate route, and the middleware glues it all together.&lt;/p&gt;

&lt;h2 id=&quot;comparison-to-other-ab-testing-approaches&quot;&gt;Comparison to other A/B testing approaches&lt;/h2&gt;

&lt;h3 id=&quot;client-side-ab-testing&quot;&gt;Client-side A/B Testing&lt;/h3&gt;

&lt;p&gt;Many A/B testing products (like &lt;a href=&quot;https://support.google.com/optimize/answer/7513085&quot;&gt;Google Optimize&lt;/a&gt;, &lt;a href=&quot;https://experienceleague.adobe.com/docs/target/using/implement-target/client-side/at-js-implementation/at-js/how-atjs-works.html?lang=en&quot;&gt;Adobe Target&lt;/a&gt;, and &lt;a href=&quot;https://developers.vwo.com/docs/core-concepts&quot;&gt;VWO&lt;/a&gt;) default to a client-side approach for serving A/B tests. This is often the easiest way to integrate into an existing tech stack, where a developer adds a script tag to the page they want to test. Many of these products offer a visual editor to modify existing pages in production. When the test is run, the client-side script will contact a server to determine the user’s bucket, then dynamically modify the DOM before showing the test to the user. This results in either noticeable delays if using synchronous JavaScript, or a flash of baseline content if using asynchronous JavaScript (as you’ll see in the results below). These side effects often have a negative impact on your web vitals score and consequently SEO rankings.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/diagrams/nextjs-ab-test/01-adobe-flowchart.png&quot; alt=&quot;at.js flowchart&quot; /&gt;&lt;/p&gt;

&lt;figcaption align=&quot;center&quot;&gt;
  &lt;i&gt;
    Source: Adobe Target documentation
    &lt;a href=&quot;https://experienceleague.adobe.com/docs/target/using/implement-target/client-side/at-js-implementation/at-js/how-atjs-works.html?lang=en&quot;&gt;
      link
    &lt;/a&gt;
  &lt;/i&gt;
&lt;/figcaption&gt;

&lt;h3 id=&quot;server-side-ab-testing&quot;&gt;Server-side A/B Testing&lt;/h3&gt;

&lt;p&gt;Many A/B testing products also allow you to do the split testing on the server-side. In this configuration, the developer has the freedom to implement their split tests how they want, contacting the A/B testing service to determine a user’s bucket and report events. While this method gives the developer the most control, it may incur higher latencies because every request must hit the origin server. Worse, because 2 users may see different responses from the same URL, CDN caching becomes much less effective.&lt;/p&gt;

&lt;h3 id=&quot;ab-testing-via-middleware&quot;&gt;A/B testing via middleware&lt;/h3&gt;

&lt;p&gt;In summary, running A/B tests via middleware has a number of advantages:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Bucketing at the edge&lt;/strong&gt;: User bucketing is on the critical path and can severely impact load times. By doing this at the edge, we can leverage its short latency to users.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Bucketing on the initial request&lt;/strong&gt;: Middleware will determine the user’s bucket off the initial HTTP request, obviating the need for additional requests. This leads to faster load times compared to client-side A/B testing.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Leverage static site generation (SSG)&lt;/strong&gt;: If your page variants are built with SSG and served at the edge, then your A/B tests can run entirely from the edge, leveraging the performance benefits of your CDN. This configuration leads to faster responses compared to server-side A/B testing frameworks, which require you to hit the server on every request.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;implementing-ab-tests&quot;&gt;Implementing A/B tests&lt;/h2&gt;

&lt;p&gt;First, make sure you are running at least version 12 of Next.js. An easy way to ensure this is to install the latest version:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;npm &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;next@latest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If this is your first Next.js project, follow this &lt;a href=&quot;https://nextjs.org/docs/getting-started&quot;&gt;quickstart guide&lt;/a&gt; to get your Next.js project up and running.&lt;/p&gt;

&lt;h3 id=&quot;add-the-middleware&quot;&gt;Add the middleware&lt;/h3&gt;

&lt;p&gt;Suppose you have a marketing page that you want to test in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pages/marketing.jsx&lt;/code&gt;. First, create a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pages/marketing/&lt;/code&gt; directory and move your original page into this directory.&lt;/p&gt;

&lt;p&gt;Middleware is defined by adding a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_middleware.js&lt;/code&gt; file in that directory:&lt;/p&gt;

&lt;div class=&quot;language-tsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// pages/marketing/_middleware.js&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;NextRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;NextResponse&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;next/server&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;COOKIE_NAME&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;bucket-marketing&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Choose a random bucket&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Optional: contact a 3rd party service to get the user's bucket&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MARKETING_BUCKETS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;original&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getBucket&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MARKETING_BUCKETS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;floor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MARKETING_BUCKETS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;middleware&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;NextRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Get the bucket cookie&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bucket&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cookies&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;COOKIE_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getBucket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Proxy to the appropriate variant&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;NextResponse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rewrite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`/marketing/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bucket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// Add the bucket to cookies if it's not there&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cookies&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;COOKIE_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;COOKIE_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bucket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In the example above, we flip a coin in the middleware to set which variant the user sees, which allows us to avoid a round trip to the origin server. However, you might want integrate with a 3rd party service for managing how users are bucketed in the A/B test. This might be an A/B testing service like &lt;a href=&quot;https://marketingplatform.google.com/about/optimize/&quot;&gt;Google Optimize&lt;/a&gt; or a feature flag management service like &lt;a href=&quot;https://launchdarkly.com/&quot;&gt;LaunchDarkly&lt;/a&gt;. In this case, simply modify the middleware make a &lt;a href=&quot;https://nextjs.org/docs/api-reference/edge-runtime#fetch&quot;&gt;Fetch request&lt;/a&gt; to your 3rd party service to set the cookie, instead of randomly assigning.&lt;/p&gt;

&lt;h3 id=&quot;deploy-your-page-variants&quot;&gt;Deploy your page variants&lt;/h3&gt;

&lt;p&gt;Notice that this middleware will transparently route users visiting &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/marketing/&lt;/code&gt; to 1 of 3 possible paths:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pages/marketing/original.jsx&lt;/code&gt; ⇒ &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/marketing/original&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pages/marketing/a.jsx&lt;/code&gt; ⇒ &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/marketing/a&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pages/marketing/b.jsx&lt;/code&gt; ⇒ &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/marketing/b&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can copy the original page to these 3 routes and make your various edits to the respective variants. If you leverage SSG via &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;getStaticProps&lt;/code&gt;, then each of these variants will continue to be served from a CDN for best performance.&lt;/p&gt;

&lt;p&gt;These routes are hidden to the user, who just visits &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/marketing/&lt;/code&gt;. The middleware will select the correct bucket and transparently route users to the right variant.&lt;/p&gt;

&lt;h3 id=&quot;leveraging-plasmic-variants-optional&quot;&gt;Leveraging Plasmic variants [optional]&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://www.plasmic.app/&quot;&gt;Plasmic&lt;/a&gt; is a visual editor that works with Next.js, where you can easily create full pages in a WYSIWYG studio. If you have not yet set up Plasmic in your Next.js project yet, you can follow this &lt;a href=&quot;https://docs.plasmic.app/learn/nextjs-quickstart&quot;&gt;quickstart guide&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Let’s assume that you already have a Marketing page in Plasmic. You can create page &lt;a href=&quot;https://docs.plasmic.app/learn/plasmic-studio-guide/#variants&quot;&gt;variants&lt;/a&gt; in the rightside pane. In this example, I’ll “add a single-select group of variants”, where I name the group &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;experiment&lt;/code&gt; with 2 variants, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;a&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;b&lt;/code&gt;. These variants are expressed as overrides over the base variant. &lt;a href=&quot;https://docs.plasmic.app/learn/plasmic-studio-guide/#variants&quot;&gt;Click here to read more about Plasmic variants&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/diagrams/nextjs-ab-test/02-plasmic-variants.png&quot; alt=&quot;plasmic-variants&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Once you’ve created your page variants, you can render individual pages by using the following code in your Next.js page routes &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pages/marketing/{original,a,b}.tsx&lt;/code&gt;. Just change the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;experiment&lt;/code&gt; key in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;componentProps&lt;/code&gt; of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PlasmicComponent&lt;/code&gt; to choose which variant to show. For the base variant, just pass in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;null&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-tsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// pages/marketing/original.tsx&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;initPlasmicLoader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;PlasmicRootProvider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;PlasmicComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;ComponentRenderData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;@plasmicapp/loader-nextjs&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PLASMIC&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;../../plasmic-init&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Statically fetch the data needed to render Plasmic pages or components.&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getStaticProps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Make sure you call `fetchComponentData` with the right path or component name defined in Plasmic.&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;plasmicData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PLASMIC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fetchComponentData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;/marketing&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;plasmicData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Render the page or component from Plasmic.&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;plasmicData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ComponentRenderData&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;PlasmicRootProvider&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;loader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PLASMIC&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;prefetchedData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;plasmicData&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;PlasmicComponent&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/marketing&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;componentProps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;experiment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;PlasmicRootProvider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;a&lt;/code&gt; variant, pass this in as a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;componentProp&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-tsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// pages/marketing/a.tsx&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PlasmicRootProvider&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;loader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PLASMIC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;prefetchedData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;plasmicData&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;PlasmicComponent&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/marketing&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;componentProps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;experiment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;PlasmicRootProvider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;b&lt;/code&gt; variant, pass this in as a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;componentProp&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-tsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// pages/marketing/b.tsx&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PlasmicRootProvider&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;loader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PLASMIC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;prefetchedData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;plasmicData&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;PlasmicComponent&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/marketing&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;componentProps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;experiment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;PlasmicRootProvider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Because we are using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;getStaticProps&lt;/code&gt; in this example, Plasmic generates code at build time so that static pages can be served from your CDN. If you are using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;next dev&lt;/code&gt;, the Plasmic Next.js plugin will also automatically rebuild on any detected changes from Plasmic Studio, allowing you to easily continuously edit your pages.&lt;/p&gt;

&lt;h3 id=&quot;connect-to-your-analytics&quot;&gt;Connect to your analytics&lt;/h3&gt;

&lt;p&gt;Depending on which analytics provider you use, you’ll want to instrument your A/B test. The following code snippet assumes that you have already &lt;a href=&quot;https://segment.com/docs/connections/sources/catalog/libraries/website/javascript/quickstart/&quot;&gt;set up your project with Segment&lt;/a&gt;, but most analytics libraries will look quite similar:&lt;/p&gt;

&lt;div class=&quot;language-tsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;analytics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;track&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;pageview&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Use a unique key for your experiment and tag which variant you're showing&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Experiment 1&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You will want to make sure that you add a property for the experiment, and then wire in which variant the user is seeing so that you can segment on the variant when analyzing your retention and conversion funnel.&lt;/p&gt;

&lt;p&gt;For quick access to some analytics-specific reference articles, see:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://help.mixpanel.com/hc/en-us/articles/115004565766-A-B-Test-Analysis&quot;&gt;Mixpanel&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://help.amplitude.com/hc/en-us/articles/115001580108-Analyze-A-B-test-results-in-Amplitude&quot;&gt;Amplitude&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://help.heap.io/define-analyze/analysis-features/a-b-testing/&quot;&gt;Heap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;current-state-of-deployments&quot;&gt;Current state of deployments&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Vercel&lt;/strong&gt;: You can easily deploy your Next.js application via Vercel (see their &lt;a href=&quot;https://vercel.com/docs/concepts/deployments/overview&quot;&gt;deployments guide&lt;/a&gt;), which will deploy your middleware to Vercel &lt;a href=&quot;https://vercel.com/docs/concepts/functions/edge-functions&quot;&gt;Edge Functions&lt;/a&gt;. Under the hood, Vercel API routes are run on &lt;a href=&quot;https://aws.amazon.com/lambda/&quot;&gt;AWS Lamba&lt;/a&gt; and middleware are run on &lt;a href=&quot;https://workers.cloudflare.com/&quot;&gt;Cloudflare Workers&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Netlify&lt;/strong&gt; is &lt;a href=&quot;https://www.netlify.com/blog/2021/10/27/use-next.js-12-on-netlify/&quot;&gt;compatible with Next.js 12&lt;/a&gt; as well. However as the time of writing, Next.js 12 middleware is still &lt;a href=&quot;https://github.com/netlify/netlify-plugin-nextjs/blob/main/docs/middleware.md&quot;&gt;deployed to origin servers&lt;/a&gt;, as opposed to the edge. Netlify is still actively working on their &lt;a href=&quot;https://www.netlify.com/products/edge/edge-handlers/&quot;&gt;Edge Handlers&lt;/a&gt; offering. Netlify also has their own built-in &lt;a href=&quot;https://docs.netlify.com/site-deploys/split-testing/&quot;&gt;split testing&lt;/a&gt; feature, which may have similar performance characteristics, albeit with less ability to customize and integrate with third-party tools.&lt;/li&gt;
  &lt;li&gt;In any other server-side deployment of Next.js, middleware will automatically run at the server.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;results&quot;&gt;Results&lt;/h2&gt;

&lt;p&gt;For a quick benchmark, we implemented a quick marketing page and deployed to Vercel at &lt;a href=&quot;https://next-ab-test.vercel.app/&quot;&gt;https://next-ab-test.vercel.app/&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;See here for project assets:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://studio.plasmic.app/projects/e4zz2VXMkxdmVUi2KdGouZ&quot;&gt;Plasmic Project&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/plasmicapp/next-ab-test&quot;&gt;GitHub Repo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;baseline&quot;&gt;Baseline&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://next-ab-test.vercel.app/marketing-original&quot;&gt;https://next-ab-test.vercel.app/marketing-original&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When analyzing baseline page speed performance using Google’s &lt;a href=&quot;https://pagespeed.web.dev/&quot;&gt;PageSpeed Insights&lt;/a&gt; tool, we show a score of 88. The slower times to contentful paint are likely caused by the heavy use of images on the marketing page.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/diagrams/nextjs-ab-test/03-result-baseline.png&quot; alt=&quot;result-baseline&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://pagespeed.web.dev/report?url=https%3A%2F%2Fnext-ab-test.vercel.app%2Fmarketing-original&quot;&gt;Source&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;nextjs--middleware&quot;&gt;Next.js + Middleware&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://next-ab-test.vercel.app/marketing&quot;&gt;https://next-ab-test.vercel.app/marketing&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When using Next.js middleware, we see performance minimally affected. The middleware function is run on the initial HTTP request, yielding a slight additional delay to the initial page load.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/diagrams/nextjs-ab-test/04-result-middleware.png&quot; alt=&quot;result-middleware&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://pagespeed.web.dev/report?url=https%3A%2F%2Fnext-ab-test.vercel.app%2Fmarketing&quot;&gt;Source&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;using-google-optimize&quot;&gt;Using Google Optimize&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://next-ab-test.vercel.app/marketing-optimize&quot;&gt;https://next-ab-test.vercel.app/marketing-optimize&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We then implemented the same A/B test using Google Optimize to showcase the performance when using a client-side A/B testing framework. We expect most client-side frameworks (like &lt;a href=&quot;https://support.google.com/optimize/answer/7513085&quot;&gt;Google Optimize&lt;/a&gt;, &lt;a href=&quot;https://support.optimizely.com/hc/en-us/articles/4411731640973&quot;&gt;Optimizely&lt;/a&gt;, &lt;a href=&quot;https://experienceleague.adobe.com/docs/target/using/implement-target/client-side/at-js-implementation/at-js/how-atjs-works.html?lang=en&quot;&gt;Adobe Target&lt;/a&gt;, and &lt;a href=&quot;https://developers.vwo.com/docs/core-concepts&quot;&gt;VWO&lt;/a&gt;) to have similar performance due to similar architecture.&lt;/p&gt;

&lt;p&gt;In client-side frameworks, the baseline variant is initially loaded. Then client-side Javascript will make a subsequent request to Google Optimize, determine the bucket, and modify the DOM to implement the change. This results in a flash of baseline content when using asynchronous JavaScript.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/diagrams/nextjs-ab-test/05-result-google-optimize.png&quot; alt=&quot;result-google-optimize&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://pagespeed.web.dev/report?url=https%3A%2F%2Fnext-ab-test.vercel.app%2Fmarketing-optimize&quot;&gt;Source&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;what-does-all-this-mean&quot;&gt;What does all this mean?&lt;/h2&gt;

&lt;p&gt;With Next.js middleware, A/B testing easily fits into your developer’s workflow. Instead of using an out-of-band visual editor like &lt;a href=&quot;https://marketingplatform.google.com/about/optimize/&quot;&gt;Google Optimize&lt;/a&gt; or &lt;a href=&quot;https://vwo.com/testing/ab-testing/&quot;&gt;VWO&lt;/a&gt;, you can just create new routes in your Next.js project for each variant you want to test. By leveraging the edge to serve your tests, you can easily test full pages and web apps without sacrificing performance. These 2 factors significantly lower the development and operational costs, such that there is no good reason &lt;em&gt;not to&lt;/em&gt; use A/B tests. For each iteration of your web page, deploy it to a new route and add it to your middleware and analytics to make measurable improvements time and time again.&lt;/p&gt;

&lt;h2 id=&quot;try-integrated-ab-testing-in-plasmic&quot;&gt;Try integrated A/B testing in Plasmic!&lt;/h2&gt;

&lt;p&gt;The tutorial above shows how to manually implement A/B testing in code, optionally leveraging Plasmic as the page builder. You can also specify your A/B tests entirely within Plasmic in a no-code setting. This opens up the ability for anyone in your organization to rapidly create new experiences and deploy A/B tests in production. Check out our &lt;a href=&quot;https://docs.plasmic.app/learn/ab-testing-personalization/&quot;&gt;documentation on A/B testing&lt;/a&gt; to get started and create a free account at &lt;a href=&quot;https://studio.plasmic.app/&quot;&gt;https://studio.plasmic.app/&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Tue, 12 Apr 2022 12:40:05 +0000</pubDate>
        <link>https://www.raymondcheng.net/posts/nextjs-ab-testing.html</link>
        <guid isPermaLink="true">https://www.raymondcheng.net/posts/nextjs-ab-testing.html</guid>
        
        <category>guides</category>
        
        <category>web</category>
        
        
        <category>posts</category>
        
      </item>
    
      <item>
        <title>Build a Netflix clone in Next.js with a visual app builder</title>
        <description>&lt;p&gt;In this guide, we will show you how to build a video player web application with &lt;a href=&quot;https://www.plasmic.app/&quot;&gt;Plasmic&lt;/a&gt;, a visual builder for React. While many Plasmic users use it to build landing and content pages, Plasmic is actually a powerful UI builder for apps of any complexity, allowing you or your design team to rapidly iterate on rich web applications.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.plasmic.app/&quot;&gt;Plasmic&lt;/a&gt; is a new type of low-code tool that can drag and drop React components from your codebase, and render back into your codebase, which you own. This deep integration with code is powerful, letting you introduce arbitrary functionality—but most importantly, it ensures you are always in control. The app builder is never a walled garden that limits what you can do.&lt;/p&gt;

&lt;p&gt;You can play with the live demo here:&lt;br /&gt;
&lt;a href=&quot;https://plasmicflix.vercel.app/&quot;&gt;https://plasmicflix.vercel.app/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For an inside look at the Plasmic project,
&lt;a href=&quot;https://studio.plasmic.app/projects/eqrDNQBEf6ytvNJgLEmjN2&quot;&gt;see here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/diagrams/plasmicflix/00-app-screenshot.png&quot; alt=&quot;screenshot&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Plasmic is used to create the pages and visual design of the application.&lt;/li&gt;
  &lt;li&gt;Plasmic can drag and drop React components from our Next.js codebase. In this app, we have components that query and display data from &lt;a href=&quot;https://www.themoviedb.org/&quot;&gt;The Movie Database&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Plasmic designed pages are rendered back into the Next.js application.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;step-1-clone-the-plasmic-project&quot;&gt;Step 1: Clone the Plasmic project&lt;/h2&gt;

&lt;p&gt;Let’s first explore what it’s like to use Plasmic Studio to edit the app visually.&lt;/p&gt;

&lt;p&gt;Open the Plasmic project&lt;br /&gt;
&lt;a href=&quot;https://studio.plasmic.app/projects/eqrDNQBEf6ytvNJgLEmjN2&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/diagrams/plasmicflix/01-clone-project.png&quot; alt=&quot;clone-project&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Make a copy of it that you can edit by clicking the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Copy Project&lt;/code&gt; button in the blue bar. This will clone the project and take you to your project.&lt;/p&gt;

&lt;h2 id=&quot;step-2-create-a-popular-movie-list&quot;&gt;Step 2: Create a popular movie list&lt;/h2&gt;

&lt;p&gt;Let’s make a new page for top movie rankings by using the code components from the code base.&lt;/p&gt;

&lt;p&gt;Create a new page called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Popular Movies&lt;/code&gt;, and set a path for this page (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/popular&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/diagrams/plasmicflix/02-new-page.png&quot; alt=&quot;new-page&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Set the background of the page to black&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/diagrams/plasmicflix/03-set-background.png&quot; alt=&quot;set-background&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Insert a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MovieGrid&lt;/code&gt; by searching the AddDrawer (by clicking the blue + button)&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;MovieGrid is a React component defined in our application’s codebase. As we’ll see later, its source is in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;code-components/Collection.tsx&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/img/diagrams/plasmicflix/04-add-moviegrid.png&quot; alt=&quot;add-moviegrid&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Then in the right-hand panel, configure the props on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MovieGrid&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;category_id&lt;/code&gt; should match a valid &lt;a href=&quot;https://developers.themoviedb.org/3/movies&quot;&gt;category from TMDB&lt;/a&gt; (e.g. “popular”)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;itemLimit&lt;/code&gt; - set how many movies to show&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/diagrams/plasmicflix/05-set-props.png&quot; alt=&quot;set-props&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MovieGrid&lt;/code&gt; will loop over the results from TMDB.&lt;/p&gt;

&lt;p&gt;Now customize the repeated content by inserting instances of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MovieField&lt;/code&gt; to retrieve the relevant data from the movie metadata.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/diagrams/plasmicflix/06-add-moviefield.png&quot; alt=&quot;add-moviefield&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;putting-it-all-together&quot;&gt;Putting it all together&lt;/h3&gt;

&lt;p&gt;The following video shows you how to create the page end-to-end.&lt;/p&gt;

&lt;video width=&quot;99%&quot; preload=&quot;metadata&quot; controls=&quot;&quot;&gt;&lt;source src=&quot;/img/diagrams/plasmicflix/07-end-to-end.mp4&quot; type=&quot;video/mp4; codecs=&amp;quot;avc1.42E01E, mp4a.40.2&amp;quot;&quot; /&gt;&lt;/video&gt;

&lt;h2 id=&quot;step-3-set-up-your-codebase&quot;&gt;Step 3: Set up your codebase&lt;/h2&gt;

&lt;p&gt;So far, we’ve been editing the visual design of the app in Plasmic Studio. Now we’re going to turn our attention to the codebase that the design is connected to.&lt;/p&gt;

&lt;p&gt;The codebase is available for you &lt;a href=&quot;https://github.com/plasmicapp/plasmic/tree/master/examples/plasmicflix&quot;&gt;here&lt;/a&gt;. This repository comes with all of the &lt;strong&gt;code components&lt;/strong&gt; we were just designing with in Plasmic Studio.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Code components&lt;/strong&gt; are React components defined in your code base that we import into Plasmic Studio for use. Your project will be configured to look for these at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http://localhost:3000/plasmic-host&lt;/code&gt; You can use these components in your design, as well as style them. Check out &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;plasmicflix/plasmic-init.ts&lt;/code&gt; to see how they are registered with Plasmic.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;First, clone the repo to your development machine and install the dependencies.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone git@github.com:plasmicapp/plasmic.git
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;plasmic/examples/plasmicflix/
yarn &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Copy &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.env.example&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.env.local&lt;/code&gt;, which will store the environment variables when running a local development server. Update the Plasmic project ID and token to your own Plasmic project’s values&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Plasmic Project ID:&lt;/strong&gt; You can find the project ID in the URL:
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://studio.plasmic.app/projects/PROJECTID&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Plasmic API token:&lt;/strong&gt; The API token can be found by clicking the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Code&lt;/code&gt; button in the top bar.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/diagrams/plasmicflix/08-api-token.png&quot; alt=&quot;api-token&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now run the dev server, which listens at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[http://localhost:3000](http://localhost:3000)&lt;/code&gt; . Visit this URL to see your changes live!&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;yarn dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;configure-your-plasmic-project-app-host&quot;&gt;Configure your Plasmic project app host&lt;/h3&gt;

&lt;p&gt;Plasmic Studio loads React components from your live running app, using something called &lt;strong&gt;app hosting—&lt;/strong&gt;your app serves as the “host” for Plasmic Studio.&lt;/p&gt;

&lt;p&gt;To tell Plasmic to load code components on your dev server, you’ll need to update your project’s &lt;strong&gt;app host&lt;/strong&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http://localhost:3000/plasmic-host&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note: At this point, you’ll need to keep your dev server running at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http://localhost:3000&lt;/code&gt; for the project to load.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;video width=&quot;99%&quot; preload=&quot;metadata&quot; controls=&quot;&quot;&gt;&lt;source src=&quot;/img/diagrams/plasmicflix/09-set-apphost.mp4&quot; type=&quot;video/mp4; codecs=&amp;quot;avc1.42E01E, mp4a.40.2&amp;quot;&quot; /&gt;&lt;/video&gt;

&lt;p&gt;After restarting the dev server and Plasmic Studio, you should now be able to make edits across Plasmic Studio and your codebase. Updates to the Plasmic project should automatically be detected and reflected in your dev server. Similarly, any edits you make to your code components should also show up in Plasmic Studio.&lt;/p&gt;

&lt;h2 id=&quot;how-does-this-work-under-the-hood&quot;&gt;How does this work under the hood?&lt;/h2&gt;

&lt;p&gt;Let’s dive into the React components defined in this codebase!&lt;/p&gt;

&lt;h3 id=&quot;moviegrid&quot;&gt;MovieGrid&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MovieGrid&lt;/code&gt; is the code component that will query an API service for a movie collection, then loop over the results. Code components are registered in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;plasmic-init.ts&lt;/code&gt;. The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;props&lt;/code&gt; field is used to tell the Plasmic Studio the component prop interface, which allows us to expose these props in the right pane as shown in the screenshots earlier. See the docs for details on &lt;a href=&quot;https://docs.plasmic.app/learn/registering-code-components/&quot;&gt;component registration&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PLASMIC.registerComponent&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MovieGrid, &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  name: &lt;span class=&quot;s2&quot;&gt;&quot;MovieGrid&quot;&lt;/span&gt;,
  props: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    category_id: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;string&quot;&lt;/span&gt;,
      defaultValue: &lt;span class=&quot;s2&quot;&gt;&quot;popular&quot;&lt;/span&gt;,
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
    children: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;slot&quot;&lt;/span&gt;,
      defaultValue: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;text&quot;&lt;/span&gt;,
        value: &lt;span class=&quot;s2&quot;&gt;&quot;Placeholder&quot;&lt;/span&gt;,
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
    loading: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;slot&quot;&lt;/span&gt;,
      defaultValue: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;text&quot;&lt;/span&gt;,
        value: &lt;span class=&quot;s2&quot;&gt;&quot;Loading...&quot;&lt;/span&gt;,
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
    itemLimit: &lt;span class=&quot;s2&quot;&gt;&quot;number&quot;&lt;/span&gt;,
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
  importPath: &lt;span class=&quot;s2&quot;&gt;&quot;./code-components/Collection&quot;&lt;/span&gt;,
&lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Under the hood, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MovieGrid&lt;/code&gt; will query &lt;a href=&quot;https://www.themoviedb.org/&quot;&gt;The Movie Database&lt;/a&gt;, retrieving a list of movies based on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;category_id&lt;/code&gt; . We then iterate over the results and populate a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MovieContext&lt;/code&gt;. Note the use of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;repeatedElement&lt;/code&gt;, a special convenience function that enables the component’s children to be repeated. In this case, this represents a single movie to be shown in the list.&lt;/p&gt;

&lt;div class=&quot;language-tsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// code-components/Collection.tsx&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MovieGrid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MovieGridProps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;children&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;loading&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;category_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;itemLimit&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setCollection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Movie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([])&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;loaded&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setLoaded&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;boolean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;items&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;itemLimit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;useEffect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;collection&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getMovieCollection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;category_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;setCollection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;setLoaded&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;})()&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;loaded&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;loaded&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;loading&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;movie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Movie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;MovieContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Provider&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;movie&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;movie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;repeatedElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;children&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;MovieContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Provider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;moviefield&quot;&gt;MovieField&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MovieField&lt;/code&gt; will either render a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MovieTextInfo&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MoviePoster&lt;/code&gt; depending on the type. These code components simply read a single value from the contexts and display the data.&lt;/p&gt;

&lt;div class=&quot;language-tsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// code-components/Movie.tsx&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MoviePoster&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MoviePosterProps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;customStyle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;movieContext&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useMovie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;img&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;customStyle&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;imagePath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;movieContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;poster_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;??&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In summary, by populating state into React contexts, we can store and retrieve data for use in other code components, which can be used for arbitrarily powerful interactions in Plasmic Studio.&lt;/p&gt;

&lt;h2 id=&quot;next-steps&quot;&gt;Next Steps&lt;/h2&gt;

&lt;p&gt;To learn more about Plasmic, take a look at the following resources:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.plasmic.app/learn/&quot;&gt;Plasmic documentation&lt;/a&gt; - learn about Plasmic features and API&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://studio.plasmic.app/projects/wU2bHAY7hyxcrseYmbfi82&quot;&gt;Plasmic Levels&lt;/a&gt; - an interactive game to teach you how to use Plasmic Studio&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.plasmic.app/blog&quot;&gt;Plasmic Blog&lt;/a&gt; - for more tutorials and guides&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can also check out the &lt;a href=&quot;https://www.github.com/plasmicapp/plasmic&quot;&gt;Plasmic GitHub repository&lt;/a&gt;. Your feedback and suggestions are most appreciated!&lt;/p&gt;
</description>
        <pubDate>Wed, 06 Apr 2022 12:40:05 +0000</pubDate>
        <link>https://www.raymondcheng.net/posts/plasmicflix.html</link>
        <guid isPermaLink="true">https://www.raymondcheng.net/posts/plasmicflix.html</guid>
        
        <category>guides</category>
        
        <category>web</category>
        
        
        <category>posts</category>
        
      </item>
    
      <item>
        <title>Building a Pokedex with Plasmic + Supabase</title>
        <description>&lt;p&gt;In this guide, we will show you how to build a crowd-sourced Pokemon Pokedex, by connecting &lt;a href=&quot;https://supabase.com/&quot;&gt;&lt;strong&gt;Supabase&lt;/strong&gt;&lt;/a&gt;, an open source Firebase backend alternative, with &lt;a href=&quot;https://www.plasmic.app/&quot;&gt;&lt;strong&gt;Plasmic&lt;/strong&gt;&lt;/a&gt;, a visual builder for the web. While many users leverage Plasmic to quickly launch and iterate on landing pages, in this tutorial we’ll show just how powerful Plasmic can be as a general-purpose visual builder for React, which can be used to design and implement fully featured read-write applications.&lt;/p&gt;

&lt;p&gt;You can play with the live demo here:&lt;br /&gt;
&lt;a href=&quot;https://plasmic-supabase-demo.vercel.app/&quot;&gt;https://plasmic-supabase-demo.vercel.app/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also take a look at the Plasmic project here:&lt;br /&gt;
&lt;a href=&quot;https://studio.plasmic.app/projects/66RKaSPCwKxYjCfXWHCxn6&quot;&gt;https://studio.plasmic.app/projects/66RKaSPCwKxYjCfXWHCxn6&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;You’ll need to enable 3rd-party cookies in your browser for the project to properly load.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/img/diagrams/plasmic-supabase-demo/application-screenshot-00.png&quot; alt=&quot;pokedex-screenshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;At a high level,&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Supabase&lt;/strong&gt; is used to store the database of Pokemon (backed by Postgres) and provides an authentication backend. Our code base includes React components for querying the database, displaying this data, and supporting user sessions.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Plasmic&lt;/strong&gt; is used to create the pages and visual design of the application. We import our Supabase components into the Studio, which can be visually assembled and configured there (e.g. for displaying data).&lt;/li&gt;
  &lt;li&gt;Plasmic designed pages are rendered back into the Next.js application.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;step-1-set-up-your-backend-on-supabase&quot;&gt;Step 1: Set up your Backend on Supabase&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;On the &lt;a href=&quot;https://app.supabase.io/&quot;&gt;Supabase dashboard&lt;/a&gt;, click &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;New project&lt;/code&gt; and set the name of the project.
By default, Supabase will already be set up for user signups with email, with users being stored in a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;users&lt;/code&gt; table.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/diagrams/plasmic-supabase-demo/create-project-supabase-01.png&quot; alt=&quot;create-project-supabase&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Navigate to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Table Editor&lt;/code&gt; on the left side navigation bar. Here we can create a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;New table&lt;/code&gt; to store our Pokemon entries. Make sure you are in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;schema public&lt;/code&gt; view. Create a new table called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;entries&lt;/code&gt;, with 6 columns:
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;id&lt;/code&gt;: is a unique ID for the entry. This column should be generated automatically as the primary column.&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;user_id&lt;/code&gt;: Create a relation to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;user&lt;/code&gt; table by clicking on the link icon next to the column name. Here, you can select the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;id&lt;/code&gt; column of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;user&lt;/code&gt; table.&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;name&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;description&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;imageUrl&lt;/code&gt;: This will store the name, description, and imageUrl for each Pokemon.&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;inserted_at&lt;/code&gt; : This will be an automatically populated column, set to when the row was first inserted.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note: In this tutorial we’ve turned off “&lt;a href=&quot;https://supabase.com/docs/guides/auth/row-level-security&quot;&gt;Row Level Security (RLS)&lt;/a&gt;”. In practice, you will want to create policies that restrict who gets to create, edit, and delete posts. By turning this off, any user can modify the database without restrictions.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/img/diagrams/plasmic-supabase-demo/create-table-supabase-02.png&quot; alt=&quot;create-table-supabase&quot; /&gt;&lt;/p&gt;

&lt;p&gt;For your convenience, feel free to import the following CSV into Supabase to pre-populate your database. In order to import, you must select &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Import data via spreadsheet&lt;/code&gt;, in the new table dialog box. (It does not work on existing tables.)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/img/diagrams/plasmic-supabase-demo/pokedex-export.csv&quot;&gt;pokedex-export.csv&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;step-2-set-up-your-codebase&quot;&gt;Step 2: Set up your codebase&lt;/h2&gt;

&lt;p&gt;We have a working code example for you &lt;a href=&quot;https://github.com/plasmicapp/plasmic/tree/master/examples/supabase-demo&quot;&gt;here&lt;/a&gt;. This starter comes with all of the code components you need to get started querying Supabase through Plasmic Studio.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Code components are React components defined in your code base that we import into Plasmic Studio for use. Your project will be configured to look for these at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http://localhost:3000/plasmic-host&lt;/code&gt; You can use these components in your design, as well as style them. Check out &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;supabase-demo/plasmic-init.ts&lt;/code&gt; to see how they are registered with Plasmic.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;First, clone the repo to your development machine and install the dependencies.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone git@github.com:plasmicapp/plasmic.git
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;plasmic/examples/plasmic-supabase-demo/
yarn &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Copy &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.env.example&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.env.local&lt;/code&gt;, which will store the environment variables when running a local development server. Add your Supabase project’s URL and public key, which you can find in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;API&lt;/code&gt; tab on the left pane of your Supabase dashboard.&lt;/p&gt;

&lt;p&gt;Now run the dev server, which listens at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http://localhost:3000&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;yarn dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;step-3-explore-the-existing-application&quot;&gt;Step 3: Explore the existing application&lt;/h2&gt;

&lt;p&gt;Navigate to &lt;a href=&quot;http://localhost:3000&quot;&gt;http://localhost:3000&lt;/a&gt; in your web browser. The project will already be set up for user signups, logins, and an admin interface for adding and editing Pokemon to the database. Feel free to sign up with your email address for an account and add Pokemon to the database. Supabase will require that you verify your email address before you can log in.&lt;/p&gt;

&lt;p&gt;If you pre-populated the database in Step 1. you should see the following homepage after logging in. Otherwise, feel free to add Pokemon manually via the UI.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/diagrams/plasmic-supabase-demo/application-screenshot-03.png&quot; alt=&quot;application-screenshot&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;step-4-clone-the-plasmic-project&quot;&gt;Step 4: Clone the Plasmic project&lt;/h2&gt;

&lt;p&gt;Now let’s try to make some additions! The code base is currently configured to a read-only copy of the Plasmic project. Let’s make an editable copy first.&lt;/p&gt;

&lt;p&gt;Open the default starter Plasmic project here: &lt;br /&gt;
&lt;a href=&quot;https://studio.plasmic.app/projects/66RKaSPCwKxYjCfXWHCxn6&quot;&gt;https://studio.plasmic.app/projects/66RKaSPCwKxYjCfXWHCxn6&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/diagrams/plasmic-supabase-demo/clone-project-plasmic-04.png&quot; alt=&quot;clone-project-plasmic&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To make an editable copy, click on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Copy Project&lt;/code&gt; button in the blue bar. This will clone the project and redirect you to your copy.&lt;/p&gt;

&lt;h3 id=&quot;step-4a-configure-your-code-base-to-use-the-new-plasmic-project&quot;&gt;Step 4a: Configure your code base to use the new Plasmic project&lt;/h3&gt;

&lt;p&gt;Take note of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;project ID&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;API token&lt;/code&gt;. You can find the project ID in the URL:
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://studio.plasmic.app/projects/PROJECTID&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The API token can be found by clicking the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Code&lt;/code&gt; button in the top bar.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/diagrams/plasmic-supabase-demo/api-token-plasmic-05.png&quot; alt=&quot;api-token-plasmic&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now go back to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.env.local&lt;/code&gt; and update the corresponding project ID and token fields.&lt;/p&gt;

&lt;h3 id=&quot;step-4b-configure-your-plasmic-project-app-host&quot;&gt;Step 4b: Configure your Plasmic project app host&lt;/h3&gt;

&lt;p&gt;To tell Plasmic to look for your code components on your dev server, you’ll need to update your project’s app host to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http://localhost:3000/plasmic-host&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note: At this point, you’ll need to keep your dev server running at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http://localhost:3000&lt;/code&gt; for the project to load.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;video width=&quot;99%&quot; preload=&quot;metadata&quot; controls=&quot;&quot;&gt;&lt;source src=&quot;/img/diagrams/plasmic-supabase-demo/configure-app-host-plasmic-05.mp4&quot; type=&quot;video/mp4; codecs=&amp;quot;avc1.42E01E, mp4a.40.2&amp;quot;&quot; /&gt;&lt;/video&gt;

&lt;p&gt;After restarting the dev server and Plasmic Studio, you should now be able to make edits across Plasmic Studio and your codebase.&lt;/p&gt;

&lt;h2 id=&quot;step-5-create-a-new-page-for-our-pokedex-gallery&quot;&gt;Step 5: Create a new page for our Pokedex gallery&lt;/h2&gt;

&lt;p&gt;Let’s make a visual gallery for our Pokemon by using the code components from the code base.&lt;/p&gt;

&lt;p&gt;Create a new page called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Gallery&lt;/code&gt;, and set a path for this page (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/gallery&lt;/code&gt;).&lt;/p&gt;

&lt;video width=&quot;99%&quot; preload=&quot;metadata&quot; controls=&quot;&quot;&gt;&lt;source src=&quot;/img/diagrams/plasmic-supabase-demo/create-gallery-page-plasmic-06.mp4&quot; type=&quot;video/mp4; codecs=&amp;quot;avc1.42E01E, mp4a.40.2&amp;quot;&quot; /&gt;&lt;/video&gt;

&lt;p&gt;Insert a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SupabaseGrid&lt;/code&gt; by searching the AddDrawer (by clicking the blue + button)&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;For source see &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;components/CodeComponents/DatabaseComponents.tsx&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/img/diagrams/plasmic-supabase-demo/add-supabasegrid-plasmic-07.png&quot; alt=&quot;add-supabasegrid-plasmic&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Then in the right-hand panel, configure the props on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SupabaseGrid&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tableName&lt;/code&gt; should match the table you created in Supabase&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tableColumns&lt;/code&gt; are a comma-delimited list of columns you want to select from the table&lt;/li&gt;
  &lt;li&gt;We also set the number of columns and spacing shown in the grid&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/diagrams/plasmic-supabase-demo/set-props-plasmic-08.png&quot; alt=&quot;set-props-plasmic&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SupabaseGrid&lt;/code&gt; will loop over the rows from the query.&lt;/p&gt;

&lt;p&gt;Now customize the repeated content by inserting instances of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SupabaseField&lt;/code&gt;. Select the type of content and a selector string to fetch a single value. In the example below, we use `` to retrieve the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;imageUrl&lt;/code&gt; column of the row. Apply any styling and layout you want on these elements.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/diagrams/plasmic-supabase-demo/add-supabasefield-plasmic-09.png&quot; alt=&quot;add-supabasefield-plasmic&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;putting-it-all-together-video&quot;&gt;Putting it all together (video)&lt;/h3&gt;

&lt;p&gt;For your convenience, the following video shows you how to create the page end-to-end.&lt;/p&gt;

&lt;video width=&quot;99%&quot; preload=&quot;metadata&quot; controls=&quot;&quot;&gt;&lt;source src=&quot;/img/diagrams/plasmic-supabase-demo/end-to-end-plasmic-10.mp4&quot; type=&quot;video/mp4; codecs=&amp;quot;avc1.42E01E, mp4a.40.2&amp;quot;&quot; /&gt;&lt;/video&gt;

&lt;h2 id=&quot;step-6-check-your-dev-server&quot;&gt;Step 6: Check your dev server&lt;/h2&gt;

&lt;p&gt;If you have been running your development server this whole time, you’ll see that we have been automatically fetching and rebuilding your site as you make changes in Plasmic Studio. If you need to restart your dev server, just run:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;yarn dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;See the results at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http://localhost:3000/gallery&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;how-does-this-all-work-under-the-hood&quot;&gt;How does this all work under the hood?&lt;/h2&gt;

&lt;h3 id=&quot;supabasegrid&quot;&gt;SupabaseGrid&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SupabaseGrid&lt;/code&gt; is a code component that was registered in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;plasmic-init.ts&lt;/code&gt;. The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;props&lt;/code&gt; field is used to tell the Plasmic Studio the component prop interface, which allows us to expose these props in the right pane as shown in the screenshots earlier. See the docs for details on &lt;a href=&quot;https://docs.plasmic.app/learn/registering-code-components/&quot;&gt;component registration&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;language-tsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// plasmic-init.ts&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;PLASMIC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;registerComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SupabaseGrid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;SupabaseGrid&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;tableName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;tableColumns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;queryFilters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;children&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;slot&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;defaultValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Placeholder&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;numColumns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;defaultValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;columnGap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;defaultValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;rowGap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;defaultValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;loading&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;slot&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;defaultValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Loading...&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;importPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;./components/CodeComponents/DisplayCollections&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;supabasequery&quot;&gt;SupabaseQuery&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SupabaseGrid&lt;/code&gt; wraps a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SupabaseQuery&lt;/code&gt; component, where we perform the query based on the provided props and store the result in a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SupabaseQueryContext&lt;/code&gt;. This will be used in downstream components to display the data.&lt;/p&gt;

&lt;div class=&quot;language-tsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// supabase-demo/components/CodeComponents/DatabaseComponents.tsx&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SupabaseQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SupabaseQueryProps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// These props are set in the Plasmic Studio&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;children&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tableName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;filters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;single&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setResult&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;useState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;any&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;undefined&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;undefined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// Performs the Supabase query&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;supabase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tableName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;columns&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;,id&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;applyFilter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;validFilters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;contexts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;single&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;single&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ascending&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}));&lt;/span&gt;

      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;406&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;setResult&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// Save the result in a `SupabaseQueryContext for use with downstream components&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;SupabaseQueryContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Provider&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;children&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;SupabaseQueryContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Provider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Note that this code component is defined in your codebase. Feel free to augment it to expose more powerful querying capabilities to the Plasmic Studio.&lt;/p&gt;

&lt;h3 id=&quot;supabasegridcollection&quot;&gt;SupabaseGridCollection&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SupabaseGrid&lt;/code&gt; also nests a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SupabaseGridCollection&lt;/code&gt; under the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SupabaseQuery&lt;/code&gt;. This code component is a simple CSS grid, where we retrieve the Supabase query results from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SupabaseQueryContext&lt;/code&gt;, and iterate over the results. For each row, we populate a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RowContext&lt;/code&gt;, which will be used by the children to read the results of a single row. Note the use of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;repeatedElement&lt;/code&gt;, a special convenience function that enables the component’s children to be repeated. In this case, this represents a single card to be shown in the gallery.&lt;/p&gt;

&lt;div class=&quot;language-tsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// supabase-demo/components/CodeComponents/DisplayCollections.tsx&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SupabaseGridCollection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SupabaseGridCollectionProps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;supabaseQuery&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;useContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SupabaseQueryContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;children&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;columnGap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rowGap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;loading&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;testLoading&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;supabaseQuery&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;testLoading&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;loading&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;grid&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;gridTemplateColumns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`repeat(&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;, 1fr)`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;columnGap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;columnGap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;px`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;rowGap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rowGap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;px`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;any&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;any&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;RowContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Provider&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;repeatedElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;children&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;RowContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Provider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;supabasefield&quot;&gt;SupabaseField&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SupabaseField&lt;/code&gt; will either render a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SupabaseTextField&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SupabaseImgField&lt;/code&gt; depending on the type. These code components simply read a single value from the contexts and display the data.&lt;/p&gt;

&lt;div class=&quot;language-tsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// supabase-demo/components/CodeComponents/DisplayCollections.tsx&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SupabaseTextField&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?:&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?:&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;contexts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useAllContexts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;You need to set the name prop&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getPropValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;contexts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In summary, by populating state into React contexts, we can store and retrieve data for use in other code components, which can be used for arbitrarily powerful interactions in Plasmic Studio.&lt;/p&gt;
</description>
        <pubDate>Tue, 29 Mar 2022 12:40:05 +0000</pubDate>
        <link>https://www.raymondcheng.net/posts/plasmic-supabase-demo.html</link>
        <guid isPermaLink="true">https://www.raymondcheng.net/posts/plasmic-supabase-demo.html</guid>
        
        <category>guides</category>
        
        <category>web</category>
        
        
        <category>posts</category>
        
      </item>
    
      <item>
        <title>How to Become an H3 Hang Glider Pilot in the Bay Area</title>
        <description>&lt;p&gt;After a long 2.5 years of training to get to our H3 rating, we thought it would help to share our journey and what we wished we knew when we first started; advice that could have helped us finish in &amp;lt;1 year. Of course this is our limited opinion, so take it all with a grain of salt and get advice from other pilots you trust.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Blog post by &lt;a href=&quot;https://www.raymondcheng.net/&quot;&gt;Raymond Cheng&lt;/a&gt; and &lt;a href=&quot;http://bholt.org/&quot;&gt;Brandon Holt&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/diagrams/hanggliding/scarlett-takeo.jpg&quot; alt=&quot;Scarlett and Takeo&quot; /&gt;
Scarlett and Takeo discussing launch at Ed Levin County Park, adjacent to San Jose, CA.&lt;/p&gt;

&lt;h2 id=&quot;why-get-a-hang3-h3-rating&quot;&gt;Why get a Hang3 (H3) rating?&lt;/h2&gt;

&lt;p&gt;We took our first hang gliding lessons because we loved the idea of flying and were curious enough to give it a try. But along the way, each of us eventually had a moment when we were truly hooked by the sport. For Brandon, it was the first time he was up at Mission Peak watching pilots take off, soar together for as long as they choose, top-land, and hang out until they decided to take off again at their leisure.&lt;/p&gt;

&lt;p&gt;Now we could see ourselves continuing doing it for the rest of our lives, committed to achieving some level of mastery. This dream of soaring, riding thermals, chasing lift from ridge to mountain top, requires the accumulation of many important skills. Assuming you’re already interested in learning to hang glide, let’s first start by convincing you why it’s worth it to go all the way through H1 and H2 to get to H3 rating.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.ushpa.org/&quot;&gt;USHPA&lt;/a&gt; is the organization dedicated to making free flight (hang gliding and paragliding) possible and safe. They are responsible for certifying flying sites and standardizing the skills required to fly them safely, through the USHPA ratings (H1 to H5) system. Each flying site has a minimum required rating, so as you progress in your ratings, more and more sites will become accessible to you. USHPA also collects &lt;a href=&quot;https://www.ushpa.org/page/safety&quot;&gt;incident reports&lt;/a&gt; related to the sport. If you want to understand the risks of the sport, I’d recommend this great &lt;a href=&quot;https://chessintheair.com/the-risk-of-dying-doing-what-we-love/&quot;&gt;article&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;hang1-beginner-is-just-takeoffs-and-landings&quot;&gt;Hang1 (Beginner) is just takeoffs and landings&lt;/h3&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/I-RDq599aMo&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;Your H1 training is critical, as it builds the foundational skills of strong and safe takeoffs and landings. However by the end of this training, you are probably only flying from a 50ft hill in a straight line. With an H1 rating, it’s likely that each flying day is still a lesson with your instructor, as they take you up to higher launches and teach you essential skills. Each time you launch for the first time from a new height is exhilarating, but let’s be honest, if you didn’t know you were destined for greater things, you wouldn’t keep coming out each weekend.&lt;/p&gt;

&lt;h3 id=&quot;hang2-novice-is-limited-to-certain-sled-rides-in-norcal&quot;&gt;Hang2 (Novice) is limited to certain sled rides in Norcal&lt;/h3&gt;
&lt;iframe src=&quot;https://ayvri.com/embed/gklodrenkn/ckrbithrt00013e5s3vgz2cgq&quot; allowfullscreen=&quot;&quot; height=&quot;400&quot; width=&quot;800&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;A moderately long flight (8 min) from the top of Ed Levin — you can see why they call it “Sled Levin”.&lt;/p&gt;

&lt;p&gt;Once you get your H2, you’ll be flying from higher launches (e.g. &amp;gt;1000ft). You can safely turn, maneuver, and plan flights to make sure you get to your landing zone. The first time off the top of the mountain will be an awe-inspiring experience (certainly &lt;a href=&quot;https://www.instagram.com/p/CIcT3phnuuf/&quot;&gt;IG-worthy&lt;/a&gt;). At this point you’re independent for the first time — you’re done with formal lessons and free to go out and fly on your own (ideally with your wingmates). It’s up to you now to develop your skills, learning from more senior pilots, finding places to fly, seeking out advanced clinics (especially parachute clinics) to learn new skills or practice safety procedures.&lt;/p&gt;

&lt;p&gt;However, you’ll quickly realize that you don’t quite have the skills to handle anything but the most gentle wind conditions, and often only under the supervision of a senior observer. Because of this skill gap, you’ll find that many of the coolest local flying sites will be closed off to you (such as &lt;a href=&quot;http://www.flyfunston.org/&quot;&gt;Fort Funston&lt;/a&gt;, &lt;a href=&quot;http://mchga.org/site.shtml&quot;&gt;Mt Tam&lt;/a&gt;, &lt;a href=&quot;https://wingsofrogallo.org/mission-ridge/&quot;&gt;Mission Peak&lt;/a&gt;). For sites that you can fly (such as &lt;a href=&quot;https://mlsralakemcclure.wixsite.com/lakemcclurehg&quot;&gt;McClure&lt;/a&gt;), you’ll only be flying during the calmest parts of the day, like the morning and evenings. Most of your flights will be ~10 minute sled rides from top to bottom. This is really fun for a few trips, but ask yourself: how many times a year would you be willing to drive an equivalent distance to Tahoe, with all the planning and expense involved, to take a few sled rides down a hill?&lt;/p&gt;

&lt;p&gt;For this reason, many H2 pilots get caught in a terrible chicken-and-egg dilemma: Hungry excited new pilots want to fly a lot and work towards the required 10 career hours to get to their H3 rating. However, they’re limited to these short sled rides at limited sites. If each sled ride is 10 minutes, and you are flying once per half-day, would you spend 60 half-days going to the same sites to crank out your 10 hours to H3? From personal experience, we can tell you it can be exhausting and occasionally demoralizing. Unfortunately, this appears to be a function of the quality of available H2 sites in Northern California, and may not be as bad of an issue in other parts of California.&lt;/p&gt;

&lt;h3 id=&quot;hang3-intermediate-is-when-the-real-fun-begins&quot;&gt;Hang3 (Intermediate) is when the real fun begins&lt;/h3&gt;
&lt;iframe src=&quot;https://ayvri.com/embed/85qdzdn3j4/ckppkb2wo00013g68t5swf81i&quot; allowfullscreen=&quot;&quot; height=&quot;400&quot; width=&quot;800&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;A ~2 hour flight together at Crestline&lt;/p&gt;

&lt;p&gt;In our opinion, H3 and above is pretty much the whole point of learning to hang glide in the first place. You have built up enough skills to fly safely in a much larger network of sites. At any time, you can plan a trip with fellow H3 pilots, without requiring the generosity of senior observers to take you out. Many of these sites are soarable, meaning you can easily stay up for hours as you navigate different forms of lift, including ridge lift and thermals. While you’ve always been pilot-in-command of your glider when it comes to safety, you are now exercising additional piloting skills to actually enjoy the flight. When you reach this point of refining your craft and skills, hang gliding becomes a life-long hobby, not just an occasional thrill.&lt;/p&gt;

&lt;p&gt;Just to give a little more taste of what we are so excited about here. Once we finally were flying for over an hour at mountain sites, we finally understood the real “sport” of hang gliding. There’s an intense challenge to seeking out lift, judging where thermals are likely to form, figuring out how to climb within a thermal. Coastal flying with strong steady winds and ridge lift provide a whole new experience, with the challenge of high wind ground handling and the freedom to be able to dive and swoop at will without worrying about having to recover altitude.&lt;/p&gt;

&lt;h2 id=&quot;steps&quot;&gt;Steps&lt;/h2&gt;

&lt;p&gt;So now to the specifics: how would we do it if we had to do it all over again?&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Get a tandem flight&lt;/strong&gt;, or at least spend time at Fort Funston / Mission Peak with some local advanced pilots. 
Hang gliding has a significant upfront cost in time and money, so if you have any interest at all — do the relatively low cost thing and try it out first! See if you enjoy the sensations, the community, and the environment. If you begin this journey, it only makes sense to commit to mastery (for your own enjoyment and safety), so make sure it’s a good fit first.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Choose a good USHPA-certified instructor&lt;/strong&gt;:
Locally, only 2% of people who start their training get to a Hang1 rating. This is partly because many people are just out for that one-time experience, but this means that the vast majority of people writing reviews on Yelp focus on how fun that first lesson was. But are these the &lt;strong&gt;best&lt;/strong&gt; instructors in terms of instilling good habits and solid safety fundamentals? Make sure that you get an instructor recommendation from a pilot that you &lt;em&gt;trust&lt;/em&gt;. We are happy to provide recommendations to anyone that asks (just email/message us).
Also, don’t prioritize cost over quality. A good instructor with high integrity will make sure you are a good and safe pilot at a reasonable overall cost. Everyone learns differently (We were pretty slow). Any program that advertises a guaranteed rating for a fixed price: ask yourself if that is the best set of incentives for an instructor? (It’s not)
At a minimum, make sure your instructor is &lt;a href=&quot;https://www.ushpa.org/page/find-an-instructor&quot;&gt;USHPA-certified&lt;/a&gt;. Not all of them out there are, and you can’t get an USHPA rating from anyone who isn’t rated by USHPA to give you one.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Reserve dedicated time to cranking out each rating&lt;/strong&gt;:
Commit to flying at least 1-2 times per week while getting your H1. When you go for periods without flying, it’s 1 step backward for every 2 steps forward. Going regularly during training improves the rate at which you learn, which ultimately saves you money. Instead of spreading our training over 2+ years, it would have been better to dedicate a month (or two) to each H1, H2, and H3. For example, getting your H1 can take anywhere from a few focused days of training to a few months if you go weeks between lessons.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Get a wingmate and peer cohort&lt;/strong&gt;:
Hang gliding is a social activity. It has similarities to skiing. Each flight is solo, but half of the fun comes from sharing your awesome experiences together at the bottom. It is also much easier when you can split the burden of lodging and driving to sites. Having someone else relying on you to go out and fly with is also a good motivator to get you out of bed on a Saturday morning. It’s a long journey to H3, and everything is much easier with a buddy.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Find good mentors&lt;/strong&gt;:
Your first mentor will be your instructor, but that won’t be enough. You will learn a lot from different perspectives. Plus, your instructor may not have the time to bring you to the new sites you want to try out. Because H2s will often need senior observers, start early on building relationships with other good senior pilots. You’ll need those relationships to get past the H2⇒H3 hurdle.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Join the local Facebook community&lt;/strong&gt;:
For some reason, hang glider pilots love Facebook. For both of us, it is the only thing we use Facebook for these days. If you are an SF Bay Area pilot, join &lt;a href=&quot;https://www.facebook.com/groups/491774157955925&quot;&gt;this group&lt;/a&gt;. On these groups, you meet other pilots (both peers and potential mentors) and see when folks are organizing trips.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Join &lt;a href=&quot;https://www.ushpa.org/&quot;&gt;USHPA&lt;/a&gt;&lt;/strong&gt;:
This is the organization that issues the ratings and you will need to be a pilot member to get your rating. You will need a membership to fly at most sites, as it also provides for insurance for pilots and landowners.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;On the way to your H2 rating, get your own gear&lt;/strong&gt;:
Before your H2, you’ll be mostly renting gear from your instructor, because you’ll mostly be using dedicated beginner training gear. It’s good to get your own gear while still taking lessons because your instructor can advise you on what to buy and can work with you to adjust to your new gear. It helps greatly to train on the gear you’ll actually use, so typically once you’re at the point where you need a real harness and parachute it makes sense to buy.
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Glider: &lt;a href=&quot;https://www.willswing.com/hang-gliders/&quot;&gt;Falcon&lt;/a&gt; ($2-3K used, $4-5K new)&lt;/strong&gt;
 It’s pretty likely your first glider will be a Falcon. It’s popular, easy to get parts, and best for beginners. Work with your instructor to procure one that is the right size for you. We started with used ones, with the expectation that we’ll trade up after more experience.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Logbook: (Cheap)&lt;/strong&gt;
 You’ll need a physical logbook for your instructor or mentor/observer to sign you off. However, you’ll most likely want to keep a digital logbook for your personal records. Feel free to use our &lt;a href=&quot;https://bafl.notion.site/Logbooks-3cb0e6cdad3c4fc8b0dc261330df7348&quot;&gt;template&lt;/a&gt;.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Books:&lt;/strong&gt; Your instructor will help you with ground school. Most pilots keep a copy of &lt;a href=&quot;http://www.dennispagen.com/products/hang_gliding/hang_gliding.htm&quot;&gt;Dennis Pagen’s book&lt;/a&gt;, which serves as a great reference.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Harness and parachute: (&amp;lt;$2K)&lt;/strong&gt;
 This is probably a more important choice than your glider. The first thing you’ll want to discuss with your instructor is whether you want to go with a &lt;a href=&quot;https://www.willswing.com/harnesses/flylite-3/&quot;&gt;cocoon&lt;/a&gt; or &lt;a href=&quot;https://www.willswing.com/harnesses/z5/&quot;&gt;pod&lt;/a&gt; harness. They have very different trade-offs in comfort, storage, and positioning (which might affect your flying). It may also depend on your body type. We were recommended to buy a brand new harness and parachute. It’s not the type of thing to cheap out on and you will most likely use your harness for the rest of your life (unlike your glider). It should go without saying that you should get a quality certified parachute, and get it repacked before using if not buying new.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Helmet: ($100-500)&lt;/strong&gt;
 There are a lot of opinions on helmets and again we recommend you talk to your instructor about this. We were recommended to buy a quality motocross helmet (e.g. from &lt;a href=&quot;https://kaliprotectives.com/collections/motocross&quot;&gt;Kali&lt;/a&gt;), so that’s exactly what we did. There will occasionally be massive sales on helmets so it’s worth keeping an eye out while borrowing your instructor’s helmets.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;CamelBak: ($20-100)&lt;/strong&gt;
 Especially during the summer, sites can get quite hot. You &lt;em&gt;do not&lt;/em&gt; want to get dehydrated, as it will affect your concentration, focus, and ultimately safety. Do not underestimate this danger.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;GoPro + large tube mount: ($200-400)&lt;/strong&gt;
 There are tradeoffs between viewing angle and battery life, when choosing between a standard Hero or 360 camera. Some even attach external batteries. Whatever your choice, always record &lt;em&gt;every&lt;/em&gt; flight. You never know when you’re going to mess up and you will want the video footage to debrief any mistakes with your mentor.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Vario mobile app (+ much later, a phone mount): ($10-20)&lt;/strong&gt;
 Once you’re flying anywhere above the 50ft hill, start using a mobile app as a vario (such as &lt;a href=&quot;https://play.google.com/store/apps/details?id=com.xcglobe.flyme&amp;amp;hl=en_US&amp;amp;gl=US&quot;&gt;FlyMe&lt;/a&gt; for Android or &lt;a href=&quot;http://flyskyhy.com&quot;&gt;FlySkyHy&lt;/a&gt; for iOS). It will automatically track the length of your flights, which you’ll need for your logbook. You can upload your flight path to &lt;a href=&quot;https://ayvri.com/&quot;&gt;Ayvri&lt;/a&gt; to get a cool visualization of your flight over a map. Seriously, just get the app and stick it in your pocket. You’ll love having that automatic record of your flight times. Later, you can mount your phone to your to your glider (can be as simple as a standard bike mount), and during the flight it will show you your altitude, vertical speed, and even help you find thermals!&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Dedicated Vario: ($100-200)&lt;/strong&gt;
 Once you start trying to soar, you’ll want a dedicated vario to fly with that beeps an audible indicator to tell how fast you are going up or down and can show you other information about your flight (time, altitude, path). You can continue to use your phone and get a Bluetooth accessory vario (like the &lt;a href=&quot;https://www.blueflyvario.com/&quot;&gt;Bluefly&lt;/a&gt;), which pairs to your phone to give your vario app more accurate data. Or you can buy a dedicated Vario, such as a &lt;a href=&quot;https://www.flytec.com/index.html&quot;&gt;Flytec&lt;/a&gt;, which is designed for use with hang gliders, probably more rugged than a phone, but likely more expensive and has a steeper learning curve.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Ham radio + license: ($30-100)&lt;/strong&gt;
 As soon as you start flying sites that are not your training site, you’ll probably want a ham radio and a &lt;a href=&quot;http://www.arrl.org/ham-radio-licenses&quot;&gt;license&lt;/a&gt; to operate. Most sites have little to no cellphone reception and this will be your lifeline if there is an emergency. We recommend dedicating 1 week, memorizing as many questions as possible using &lt;a href=&quot;https://hamstudy.org/&quot;&gt;hamstudy.org&lt;/a&gt;, and just taking the test. You’ll want the license ASAP for use, and you can always go back and read a book later. We bought the cheapest &lt;a href=&quot;https://baofengtech.com/&quot;&gt;Baofeng radios&lt;/a&gt; we could find.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Truck 4x4 with rack: (Expensive)&lt;/strong&gt;
 By the time you’re an H2, you will definitely need &lt;em&gt;some&lt;/em&gt; way to get to launch sites. Many sites are at the end of very rocky terrain, which can &lt;em&gt;only&lt;/em&gt; be traversed with a 4x4. For a while you may be able to skate by, relying on the kindness of friends or strangers organizing trips. Consider pooling for a dedicated vehicle with friends when the time comes. At a minimum you should invest in a way to transport your glider from wherever you store it out to flying sites, even if it’s some ladders strapped to your car’s roof rack. It’s far easier to get someone to help you from the LZ to the top than all the way from home.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;[Optional] Dedicate 2 weeks of flying every day at an H2-friendly soarable site (like &lt;a href=&quot;https://crestlinesoaring.org/&quot;&gt;Andy Jackson&lt;/a&gt;) to get your H3 rating&lt;/strong&gt;:
Most sites that you fly as an H2 are going to be sled rides (~10 minutes). The key to quickly getting to your required 10 career hours is to score those lucky 1+ hour flights. In other words, you need to go to sites that are potentially soarable, of which only a small subset are H2-friendly (&lt;a href=&quot;https://crestlinesoaring.org/andy-jackson-airpark/&quot;&gt;Andy Jackson&lt;/a&gt;, &lt;a href=&quot;https://hatcreekrim.com/&quot;&gt;Hat Creek&lt;/a&gt;, and &lt;a href=&quot;https://mlsralakemcclure.wixsite.com/lakemcclurehg&quot;&gt;McClure&lt;/a&gt;). In both cases you will need an instructor or senior observer to help you get started.
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Why fly everyday?&lt;/strong&gt; These sites are &amp;gt;4-5 hours away from San Francisco. It takes a lot of mental energy to just drive there in the first place. You’ll be planning far out in advance and you cannot control when the weather will be good. The variance on what constitutes a good day is really high: some days you’ll get a 10 minute flight, other days you’ll get a 1+ hour flight. Flying every day is the best way to maximize the likelihood that you’ll be there on a good day. For most of these soarable sites, the best time to fly is the summer evening glass-off. If you have a remote-friendly job, it is a perfect setup to work during the day and fly every evening. Can you split this into multiple weekend trips? Yes of course, but remember that the weather may not always line up.&lt;/li&gt;
    &lt;/ul&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Why Andy Jackson?&lt;/strong&gt; It’s in San Bernardino. You’ll have easy access to a big city, grocery stores, and fast Internet. Compared to Hat Creek, which is in the middle of nowhere, it is much easier to spend a prolonged period of time here. You can even drive your 2WD car to the launch sites. Even better, there are &lt;a href=&quot;https://crestlinesoaring.org/rides/&quot;&gt;daily shuttles&lt;/a&gt; to take you there. And you’ll be around other experienced pilots every day (even weekdays), because it’s so convenient for SoCal pilots. Best of all you’ll likely be flying after 5pm everyday, so you have plenty of time to get a full day of remote work in on weekdays. If you have friends that live in Los Angeles, it’s a good reason to visit.&lt;/li&gt;
      &lt;li&gt;Ultimately we got 7 hours of flight time over 2 weeks of flying every day, while working remotely. Some flights were 12 minutes. Most flights were 30 minutes. A handful of flights were over an hour. Plus we got to meet a lot of cool SoCal pilots and visit our friends in LA. Could we have gotten our required 10 hours in multiple weekend trips? Most definitely and many pilots have done exactly that. Just be prepared for some weekends where you barely fly.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;At the end of the day, hang gliding is a sport with &lt;strong&gt;pretty high upfront cost, but very low operational expenses&lt;/strong&gt; once you are a H3. If you have all the gear and ratings, you usually fly at any site for the cost of gas to go there.&lt;/p&gt;

&lt;h3 id=&quot;continuing-education&quot;&gt;Continuing education&lt;/h3&gt;

&lt;p&gt;It’s important to note that learning is never done. There’s obviously the H4 rating to work towards, but more importantly, all throughout you should be seeking out opportunities to learn new skills and practice safety procedures. Some of our top suggestions include:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Parachute clinics:&lt;/strong&gt; learn not to fear that bundle you strapped to your harness back in your H2 days. Parachute clinics serve two purposes: repacking and practice. You should get your parachute inspected and re-packed by someone who knows how every 6 months, and parachute clinics are where people who are certified can help you. Good clinics will also teach you more about how and when to use your parachute and will give you a chance to practice throwing a chute while simulating a disaster (e.g. spinning you around in your harness).&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Towing:&lt;/strong&gt; surface towing (being pulled aloft by a winch) and aerotow (being pulled by a plane) offer opportunities to fly in locations and conditions when you otherwise couldn’t. In the Bay Area, flying at &lt;a href=&quot;https://hang-gliding.com/lesson/training-site&quot;&gt;Tres Pinos&lt;/a&gt; can be a great way to keep up your skills during the winter. Towing requires learning some new skills but can make you a better more versatile pilot overall.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Launch and landing practice:&lt;/strong&gt; go back to your favorite training sites and practice launches and landings. Advanced pilots may soar for hours and get only one chance to practice launching and landing per flying day. That can lead to atrophying skills, you may be able to get by with sloppy launches and landings for some time, but it will come back to hurt you — don’t take the most dangerous parts of hang gliding for granted.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;our-journey&quot;&gt;Our Journey&lt;/h2&gt;

&lt;p&gt;So if the above is how we’d prefer to do it, it goes without saying that we learned the hard way by doing the opposite, motivating this article.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Ray never got a tandem and Brandon got a tandem only much later into his training.&lt;/li&gt;
  &lt;li&gt;We were really lucky to have amazing instructors in Robert Booth and Takeo Eda, but we did not take our training seriously in the first couple years, sometimes only flying once per month. Then we complained that we were on the 50ft hill for what seemed like forever.&lt;/li&gt;
  &lt;li&gt;We took a while to join the respective Facebook groups and make friends in the community. We were probably more shy than we needed to be, because everyone we met has been super open, friendly, and willing to help. Getting tips from fellow pilots, organizing trips together, getting site intros — these were critical to our progression when we were H2 pilots.&lt;/li&gt;
  &lt;li&gt;We spent countless trips trying to eke out minutes at Ed Levin. While this is fantastic for take-off and landing practice, after 2.5 years we had only a handful of hours. We were really hesitant to justify to our coworkers and family to let us take 2 weeks away flying at Andy Jackson, but in retrospect it was 100% worth it. We both got our H3 at the end of this trip.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We’ve also compiled some fun videos of our friends in the area for you to get a sense of the journey:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Masayo: &lt;a href=&quot;https://www.youtube.com/watch?v=20H1lUtGBok&amp;amp;list=PLueOTgihoaCh3iyO5-5YsMHDWC4L2YwiO&amp;amp;index=13&quot;&gt;Year 1 Montage&lt;/a&gt;, &lt;a href=&quot;https://www.youtube.com/watch?v=jCBcQ4NURHc&amp;amp;list=PLueOTgihoaCh3iyO5-5YsMHDWC4L2YwiO&amp;amp;index=4&quot;&gt;Soaring Crestline&lt;/a&gt;, &lt;a href=&quot;https://www.youtube.com/watch?v=-fm1Lq5ZeeM&amp;amp;list=PLueOTgihoaCh3iyO5-5YsMHDWC4L2YwiO&amp;amp;index=30&quot;&gt;Flare Training&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Richard: &lt;a href=&quot;https://www.youtube.com/watch?v=PJczVEx4W3c&quot;&gt;Yosemite&lt;/a&gt;, &lt;a href=&quot;https://www.youtube.com/watch?v=ubqbXrUAUiw&quot;&gt;Rubik’s Cube&lt;/a&gt;, &lt;a href=&quot;https://www.youtube.com/watch?v=kdM15OFoWtQ&quot;&gt;Tandem Flight&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;join-us&quot;&gt;Join us!&lt;/h2&gt;

&lt;p&gt;Hang gliding can be an incredibly difficult and lonely journey for some, but it doesn’t have to be. If you live in the SF Bay area, come join our community!
&lt;a href=&quot;https://www.bayareafledglings.org&quot;&gt;https://www.bayareafledglings.org&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It’s filled with lovely pilots who are ready to answer questions, share trip plans, and educational resources. Like any other participatory culture, you will get out what you put into it. To start, we recommend:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Sharing videos and trip reports of your flights. Be proactive in asking for feedback to refine your skills.&lt;/li&gt;
  &lt;li&gt;Ask questions! Answer questions! Including about this post.&lt;/li&gt;
  &lt;li&gt;Plan trips: You’ll make some cool friends&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Thanks to Jess Koerner, Richard Sibley, and Bayley Adams for their feedback on the post. Thanks to Scarlet Passer for joining us on this journey. And a million thanks to Takeo Eda and Masayo Miyauchi for mentoring us through countless weekends at Ed Levin.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Agree? Disagree? Want to share your own personal experiences? Join the conversation on:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.facebook.com/groups/bayareafledglings/permalink/1235079280292072/&quot;&gt;Facebook&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/Hanggliding/comments/q8gvih/how_to_become_an_h3_hang_glider_pilot_in_the_bay/&quot;&gt;Reddit&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://twitter.com/RaymondCheng00/status/1448871887094779908&quot;&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;related-articles&quot;&gt;Related articles&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.hanggliding.org/wiki/Northern_California_H2/H3_Strategy_Guide&quot;&gt;Norcal H3 Strategy Guide&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.hanggliding.org/wiki/Southern_California_H2/H3_Strategy_Guide&quot;&gt;Socal H3 Strategy Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Wed, 06 Oct 2021 13:47:18 +0000</pubDate>
        <link>https://www.raymondcheng.net/posts/how-to-hang-glide.html</link>
        <guid isPermaLink="true">https://www.raymondcheng.net/posts/how-to-hang-glide.html</guid>
        
        <category>guides</category>
        
        <category>recreation</category>
        
        <category>popular</category>
        
        
        <category>posts</category>
        
      </item>
    
      <item>
        <title>Strong/Weak Reasons to do a PhD in Computer Science</title>
        <description>&lt;p&gt;These are the things I wish I had known before deciding to go to grad school. Obviously take these with a grain of salt, as they just represent one man’s opinion.&lt;/p&gt;

&lt;h2 id=&quot;strong-reasons-to-do-a-phd&quot;&gt;Strong reasons to do a PhD&lt;/h2&gt;

&lt;p&gt;I define a strong reason as sufficient reason on its own to do the PhD. You only need one of these:&lt;/p&gt;

&lt;h3 id=&quot;1--you-want-to-work-on-something-you-can-only-do-in-academia&quot;&gt;1. 🔥 You want to work on something you can only do in academia&lt;/h3&gt;

&lt;p&gt;When I started my PhD, interesting job opportunities in crypto companies were much more limited than they are now. Today, there are countless companies working on end-to-end encryption, homomorphic encryption, secure hardware, and many other breakthrough technologies. My friend said something similar about the robotics industry before Willow Garage and Google X’s autonomous vehicle program.&lt;/p&gt;

&lt;p&gt;At that time, the best place to work on these emerging technologies was in academia, where the ground-work was still being laid out. For these specific fields, I’m not sure if that’s the case anymore, but I am sure there are other fields for which this property still holds true. If you have a passion for such a field, I say go for it!&lt;/p&gt;

&lt;h3 id=&quot;2--you-love-the-research-process&quot;&gt;2. 🔥 You love the research process&lt;/h3&gt;

&lt;p&gt;The research process is a very particular game of writing papers, and your career will depend on your ability to publish to premier venues. Every publication venue has their own (sometimes opaque) criteria that they use to judge whether a paper is sufficiently novel to include in their journal or proceedings. If you haven’t already, read lots and lots of papers from your favorite venue. &lt;a href=&quot;https://www.cs.cornell.edu/andru/csconf.html&quot;&gt;There are conferences for every field of computer science&lt;/a&gt;. Do you find these papers absolutely enthralling and captivating? If not, you should probably stop here.&lt;/p&gt;

&lt;p&gt;If yes, find a professor working in that space and volunteer your time. Don’t limit yourself to just coding (that is only a tiny part of the research process). Find a way to get involved in the writing and editing process. Be there to wipe up the tears when the paper gets rejected. Stick around for the many paper iterations to resubmit to the next conference. Try writing a novel paper yourself. Does it fill you with joy when some experts half-way around the world consider your work good enough? If so — a PhD might be for you. If this process fills you with loathing, you might want to reconsider spending the next 5+ years of your life on it.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: I did not talk about novelty or freedom. There are countless ways to build novel software that doesn’t exist yet (e.g. in industry or open source communities), or get more freedom to pursue new ideas (e.g in startups). The research process is a very particular process.&lt;/p&gt;

&lt;h3 id=&quot;3--you-want-a-shot-at-eventually-becoming-a-professor&quot;&gt;3. 🔥 You want a shot at eventually becoming a professor&lt;/h3&gt;

&lt;p&gt;This is an obvious one, in the sense that for most schools, a PhD is a hard requirement. If you love to teach and want to do it at the college level, this is the way to do it. However, faculty positions are an incredibly scarce resource. Just think about how many faculty exist in your department and how often that changes (compared to the students). It is significantly harder to land a faculty position. If you do manage to land one of these positions, be prepared to potentially relocated to a location you never expected, or at a lower tiered school than you hoped for.&lt;/p&gt;

&lt;h2 id=&quot;weak-reasons-to-do-a-phd&quot;&gt;Weak reasons to do a PhD&lt;/h2&gt;

&lt;p&gt;I don’t mean that they’re bad reasons per se. Rather, each individual reason on their own is generally not enough to keep you going through the difficult journey.&lt;/p&gt;

&lt;h3 id=&quot;1-️-you-want-to-earn-more-money&quot;&gt;1. ❄️ You want to earn more money&lt;/h3&gt;

&lt;p&gt;There is a high opportunity cost to doing a PhD. For top-performers who plan to go into industry, you can often expect to make &lt;strong&gt;less&lt;/strong&gt; after a PhD, than if you had gone straight into industry after undergrad. In other words, it will likely take you much less time with the same amount of work ethic to get the promotions you would need to &lt;a href=&quot;https://www.levels.fyi/&quot;&gt;be at the level&lt;/a&gt; you’d be interviewing for at the end of your PhD. For example if you decide to go to Google, you’d probably start at L3 after undergrad vs L5 after your PhD. Plus, the skills you learn during your PhD are often not the ones that will make you more valuable as an engineer in company. Of course, there might be some exceptions to this based on your expertise level and field of expertise.&lt;/p&gt;

&lt;h3 id=&quot;2-️-you-need-time-to-figure-out-what-you-want-to-do-with-your-life&quot;&gt;2. ❄️ You need time to figure out what you want to do with your life&lt;/h3&gt;

&lt;p&gt;PhDs require a lot of time and you will be doing no less work than at an engineering job (often times more). Yes, you will be exposed to new fields through classes, but I’d recommend folks to take more classes in their undergrad or masters programs. When you become a PhD student, you’ll likely be expected to start working on papers on day 1. There is a chance you may find out that you want to do a PhD during the PhD, but you can also figure this out elsewhere (like I did during my first job after undergrad).&lt;/p&gt;

&lt;h3 id=&quot;3-️-you-want-those-3-letters-after-your-name&quot;&gt;3. ❄️ You want those 3 letters after your name&lt;/h3&gt;

&lt;p&gt;No one is going to care that you have a PhD. It is not going to be a determining factor in any job interview, except for professors (see above). Especially in computer science and engineering, your skills, ideas, and reputation will be your best assets. You can gain those in or out of a PhD.&lt;/p&gt;

&lt;h3 id=&quot;4-️-someone-eg-parentsteacher-told-you-to-do-it&quot;&gt;4. ❄️ Someone (e.g. parents/teacher) told you to do it&lt;/h3&gt;

&lt;p&gt;Your parents aren’t going to write your papers for you. Your professor or your peers aren’t going to write your papers either. The open secret is that the first author of most multi-authored papers wrote 95% of the paper and a PhD takes a lot of effort and focus. The motivation needs to be intrinsic. Doing this for someone else will probably not motivate you enough to go through the grind when things get tough.&lt;/p&gt;

&lt;h3 id=&quot;5-️-youre-a-masochist&quot;&gt;5. ❄️ You’re a masochist&lt;/h3&gt;

&lt;p&gt;When someone tells you how hard something is and how most people fail, does that draw you to the challenge? My group used to joke that the best PhD students are the ones that after being told they shouldn’t do one, continue to do it anyway. Marc Andreesen has &lt;a href=&quot;https://a16z.com/2019/12/16/starting-greatness-0-to-1-mosaic-netscape-marc-andreessen/&quot;&gt;said the same thing&lt;/a&gt; about startup founders. They say these things to elicit that feeling of, “do you think you’re good enough for this?” Don’t fall for that trap! It is in their best interest that more students/founders try and fail by casting a false dichotomy of success vs failure. For any individual person, not going to grad school may be way better for your career and falling for this narrative is a terrible reason to commit years of your life.&lt;/p&gt;

&lt;h3 id=&quot;6-️-you-want-to-learn-new-technical-topics&quot;&gt;6. ❄️ You want to learn new technical topics&lt;/h3&gt;

&lt;p&gt;In your PhD, you will spend a lot of your time reading papers. You’ll read some in group settings with other colleagues interested in the same subjects, but you’ll also read a lot on your own. I love that PhDs give you the time to read and engage in deep discussions about a topic with other like-minded folks. The PhD did teach me how to pick a brand new subject, learn enough to become an expert at it, and discover new insights.&lt;/p&gt;

&lt;p&gt;However, I list it as a weak reason in itself because I think of this as a life-long mindset that can and should be developed regardless of where you are. As a thought experiment, if I wanted to do a career change and start working in computational biology, would I do another PhD? Of course not! I would read papers, find good mentors and colleagues in the field, and start doing work in the space.&lt;/p&gt;

&lt;p&gt;If you ask me if I regret going to grad school, I’ll always answer no and share reasons why the experience was valuable to me. Without the ability to A/B test my life, I also won’t be able to definitively tell you that my life could have been better or worse. However as a recovering masochist that went to graduate school because I thought it was about “academic freedom”, I really underestimated just how difficult the journey would be, its impact on my mental health, and the wide prevalence of depression (&lt;a href=&quot;https://blogs.scientificamerican.com/observations/the-emotional-toll-of-graduate-school/&quot;&gt;1&lt;/a&gt;, &lt;a href=&quot;https://www.nature.com/articles/d41586-020-02439-6&quot;&gt;2&lt;/a&gt;, &lt;a href=&quot;https://academicladder.com/depression-in-grad-school-and-beyond&quot;&gt;3&lt;/a&gt;, &lt;a href=&quot;https://www.sciencemag.org/careers/2018/11/grad-school-depression-almost-took-me-end-road-i-found-new-start&quot;&gt;4&lt;/a&gt;). I hope these tips might help you recognize what your motivations are so you can make better decisions for yourself.&lt;/p&gt;

&lt;p&gt;If you agree or disagree with any of these, please leave your comments below! I’d love to hear how others would think about this decision. Join the conversation on:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/csMajors/comments/mvnjju/strongweak_reasons_to_do_a_phd_in_computer_science/&quot;&gt;Reddit&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=26892650&quot;&gt;Hacker News&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://twitter.com/RaymondCheng00/status/1384955820400594951&quot;&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Thanks to Ian Vo, Calvin Ardi, Dan Butler, Brandon Holt, Dimitrios Gklezakos, Rahul Banerjee for their feedback!&lt;/em&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 21 Apr 2021 13:47:18 +0000</pubDate>
        <link>https://www.raymondcheng.net/posts/why-phd.html</link>
        <guid isPermaLink="true">https://www.raymondcheng.net/posts/why-phd.html</guid>
        
        <category>thoughts</category>
        
        <category>life</category>
        
        <category>popular</category>
        
        
        <category>posts</category>
        
      </item>
    
      <item>
        <title>Chinese New Year Cake (Nian Gao)</title>
        <description>&lt;blockquote class=&quot;instagram-media&quot; data-instgrm-captioned=&quot;&quot; data-instgrm-permalink=&quot;https://www.instagram.com/p/CNQS2kFHkhq/?utm_source=ig_embed&amp;amp;utm_campaign=loading&quot; data-instgrm-version=&quot;13&quot; style=&quot; background:#FFF; border:0; border-radius:3px; box-shadow:0 0 1px 0 rgba(0,0,0,0.5),0 1px 10px 0 rgba(0,0,0,0.15); margin: 1px; max-width:540px; min-width:326px; padding:0; width:99.375%; width:-webkit-calc(100% - 2px); width:calc(100% - 2px);&quot;&gt;&lt;div style=&quot;padding:16px;&quot;&gt; &lt;a href=&quot;https://www.instagram.com/p/CNQS2kFHkhq/?utm_source=ig_embed&amp;amp;utm_campaign=loading&quot; style=&quot; background:#FFFFFF; line-height:0; padding:0 0; text-align:center; text-decoration:none; width:100%;&quot; target=&quot;_blank&quot;&gt; &lt;div style=&quot; display: flex; flex-direction: row; align-items: center;&quot;&gt; &lt;div style=&quot;background-color: #F4F4F4; border-radius: 50%; flex-grow: 0; height: 40px; margin-right: 14px; width: 40px;&quot;&gt;&lt;/div&gt; &lt;div style=&quot;display: flex; flex-direction: column; flex-grow: 1; justify-content: center;&quot;&gt; &lt;div style=&quot; background-color: #F4F4F4; border-radius: 4px; flex-grow: 0; height: 14px; margin-bottom: 6px; width: 100px;&quot;&gt;&lt;/div&gt; &lt;div style=&quot; background-color: #F4F4F4; border-radius: 4px; flex-grow: 0; height: 14px; width: 60px;&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;padding: 19% 0;&quot;&gt;&lt;/div&gt; &lt;div style=&quot;display:block; height:50px; margin:0 auto 12px; width:50px;&quot;&gt;&lt;svg width=&quot;50px&quot; height=&quot;50px&quot; viewBox=&quot;0 0 60 60&quot; version=&quot;1.1&quot; xmlns=&quot;https://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;https://www.w3.org/1999/xlink&quot;&gt;&lt;g stroke=&quot;none&quot; stroke-width=&quot;1&quot; fill=&quot;none&quot; fill-rule=&quot;evenodd&quot;&gt;&lt;g transform=&quot;translate(-511.000000, -20.000000)&quot; fill=&quot;#000000&quot;&gt;&lt;g&gt;&lt;path d=&quot;M556.869,30.41 C554.814,30.41 553.148,32.076 553.148,34.131 C553.148,36.186 554.814,37.852 556.869,37.852 C558.924,37.852 560.59,36.186 560.59,34.131 C560.59,32.076 558.924,30.41 556.869,30.41 M541,60.657 C535.114,60.657 530.342,55.887 530.342,50 C530.342,44.114 535.114,39.342 541,39.342 C546.887,39.342 551.658,44.114 551.658,50 C551.658,55.887 546.887,60.657 541,60.657 M541,33.886 C532.1,33.886 524.886,41.1 524.886,50 C524.886,58.899 532.1,66.113 541,66.113 C549.9,66.113 557.115,58.899 557.115,50 C557.115,41.1 549.9,33.886 541,33.886 M565.378,62.101 C565.244,65.022 564.756,66.606 564.346,67.663 C563.803,69.06 563.154,70.057 562.106,71.106 C561.058,72.155 560.06,72.803 558.662,73.347 C557.607,73.757 556.021,74.244 553.102,74.378 C549.944,74.521 548.997,74.552 541,74.552 C533.003,74.552 532.056,74.521 528.898,74.378 C525.979,74.244 524.393,73.757 523.338,73.347 C521.94,72.803 520.942,72.155 519.894,71.106 C518.846,70.057 518.197,69.06 517.654,67.663 C517.244,66.606 516.755,65.022 516.623,62.101 C516.479,58.943 516.448,57.996 516.448,50 C516.448,42.003 516.479,41.056 516.623,37.899 C516.755,34.978 517.244,33.391 517.654,32.338 C518.197,30.938 518.846,29.942 519.894,28.894 C520.942,27.846 521.94,27.196 523.338,26.654 C524.393,26.244 525.979,25.756 528.898,25.623 C532.057,25.479 533.004,25.448 541,25.448 C548.997,25.448 549.943,25.479 553.102,25.623 C556.021,25.756 557.607,26.244 558.662,26.654 C560.06,27.196 561.058,27.846 562.106,28.894 C563.154,29.942 563.803,30.938 564.346,32.338 C564.756,33.391 565.244,34.978 565.378,37.899 C565.522,41.056 565.552,42.003 565.552,50 C565.552,57.996 565.522,58.943 565.378,62.101 M570.82,37.631 C570.674,34.438 570.167,32.258 569.425,30.349 C568.659,28.377 567.633,26.702 565.965,25.035 C564.297,23.368 562.623,22.342 560.652,21.575 C558.743,20.834 556.562,20.326 553.369,20.18 C550.169,20.033 549.148,20 541,20 C532.853,20 531.831,20.033 528.631,20.18 C525.438,20.326 523.257,20.834 521.349,21.575 C519.376,22.342 517.703,23.368 516.035,25.035 C514.368,26.702 513.342,28.377 512.574,30.349 C511.834,32.258 511.326,34.438 511.181,37.631 C511.035,40.831 511,41.851 511,50 C511,58.147 511.035,59.17 511.181,62.369 C511.326,65.562 511.834,67.743 512.574,69.651 C513.342,71.625 514.368,73.296 516.035,74.965 C517.703,76.634 519.376,77.658 521.349,78.425 C523.257,79.167 525.438,79.673 528.631,79.82 C531.831,79.965 532.853,80.001 541,80.001 C549.148,80.001 550.169,79.965 553.369,79.82 C556.562,79.673 558.743,79.167 560.652,78.425 C562.623,77.658 564.297,76.634 565.965,74.965 C567.633,73.296 568.659,71.625 569.425,69.651 C570.167,67.743 570.674,65.562 570.82,62.369 C570.966,59.17 571,58.147 571,50 C571,41.851 570.966,40.831 570.82,37.631&quot;&gt;&lt;/path&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/div&gt;&lt;div style=&quot;padding-top: 8px;&quot;&gt; &lt;div style=&quot; color:#3897f0; font-family:Arial,sans-serif; font-size:14px; font-style:normal; font-weight:550; line-height:18px;&quot;&gt; View this post on Instagram&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;padding: 12.5% 0;&quot;&gt;&lt;/div&gt; &lt;div style=&quot;display: flex; flex-direction: row; margin-bottom: 14px; align-items: center;&quot;&gt;&lt;div&gt; &lt;div style=&quot;background-color: #F4F4F4; border-radius: 50%; height: 12.5px; width: 12.5px; transform: translateX(0px) translateY(7px);&quot;&gt;&lt;/div&gt; &lt;div style=&quot;background-color: #F4F4F4; height: 12.5px; transform: rotate(-45deg) translateX(3px) translateY(1px); width: 12.5px; flex-grow: 0; margin-right: 14px; margin-left: 2px;&quot;&gt;&lt;/div&gt; &lt;div style=&quot;background-color: #F4F4F4; border-radius: 50%; height: 12.5px; width: 12.5px; transform: translateX(9px) translateY(-18px);&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;margin-left: 8px;&quot;&gt; &lt;div style=&quot; background-color: #F4F4F4; border-radius: 50%; flex-grow: 0; height: 20px; width: 20px;&quot;&gt;&lt;/div&gt; &lt;div style=&quot; width: 0; height: 0; border-top: 2px solid transparent; border-left: 6px solid #f4f4f4; border-bottom: 2px solid transparent; transform: translateX(16px) translateY(-4px) rotate(30deg)&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;margin-left: auto;&quot;&gt; &lt;div style=&quot; width: 0px; border-top: 8px solid #F4F4F4; border-right: 8px solid transparent; transform: translateY(16px);&quot;&gt;&lt;/div&gt; &lt;div style=&quot; background-color: #F4F4F4; flex-grow: 0; height: 12px; width: 16px; transform: translateY(-4px);&quot;&gt;&lt;/div&gt; &lt;div style=&quot; width: 0; height: 0; border-top: 8px solid #F4F4F4; border-left: 8px solid transparent; transform: translateY(-4px) translateX(8px);&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt; &lt;div style=&quot;display: flex; flex-direction: column; flex-grow: 1; justify-content: center; margin-bottom: 24px;&quot;&gt; &lt;div style=&quot; background-color: #F4F4F4; border-radius: 4px; flex-grow: 0; height: 14px; margin-bottom: 6px; width: 224px;&quot;&gt;&lt;/div&gt; &lt;div style=&quot; background-color: #F4F4F4; border-radius: 4px; flex-grow: 0; height: 14px; width: 144px;&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/a&gt;&lt;p style=&quot; color:#c9c8cd; font-family:Arial,sans-serif; font-size:14px; line-height:17px; margin-bottom:0; margin-top:8px; overflow:hidden; padding:8px 0 7px; text-align:center; text-overflow:ellipsis; white-space:nowrap;&quot;&gt;&lt;a href=&quot;https://www.instagram.com/p/CNQS2kFHkhq/?utm_source=ig_embed&amp;amp;utm_campaign=loading&quot; style=&quot; color:#c9c8cd; font-family:Arial,sans-serif; font-size:14px; font-style:normal; font-weight:normal; line-height:17px; text-decoration:none;&quot; target=&quot;_blank&quot;&gt;A post shared by Fuzhou Food (@fuzhoufood)&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;//www.instagram.com/embed.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;&lt;a href=&quot;https://www.fuzhoufood.com/2016/12/chinese-new-years-cake.html&quot;&gt;Chinese New Year Cake (Nian Gao) Recipe&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For more recipes, check out &lt;a href=&quot;https://www.fuzhoufood.com/&quot;&gt;Fuzhou Food&lt;/a&gt;,
subscribe to the &lt;a href=&quot;https://fuzhoufood.substack.com/&quot;&gt;mailing list&lt;/a&gt;,
or follow on &lt;a href=&quot;https://www.instagram.com/fuzhoufood/&quot;&gt;Instagram&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Sun, 04 Apr 2021 19:47:18 +0000</pubDate>
        <link>https://www.raymondcheng.net/posts/nian-gao.html</link>
        <guid isPermaLink="true">https://www.raymondcheng.net/posts/nian-gao.html</guid>
        
        <category>projects</category>
        
        <category>food</category>
        
        
        <category>posts</category>
        
      </item>
    
      <item>
        <title>Iron Blogger SF</title>
        <description>&lt;p&gt;I love writing. I miss that aspect of working in research.
You see the slightest thread of an insight, and then just keep pulling on it
through reading related work, writing, and iterating, until you’ve formed a coherent thought to share with the world.
Not everything I write is equally insightful (or coherent) to others, but I always enjoy the writing process nonetheless.
In academia, writing took the form of technical papers that might only see the light of day on &lt;a href=&quot;https://arxiv.org/&quot;&gt;Arxiv&lt;/a&gt;.
Nowadays, my preferred medium is blogging, but without dedicating time to writing, it just doesn’t happen.&lt;/p&gt;

&lt;p&gt;That’s why I’m really glad that I found a community of like-minded bloggers in
&lt;a href=&quot;https://iron-blogger-sf.com/&quot;&gt;Iron Blogger SF&lt;/a&gt;.
If you want to write more regularly with other cool folks in San Francisco, I recommend you 
&lt;a href=&quot;https://iron-blogger-sf.com/the-rules/&quot;&gt;check it out&lt;/a&gt;.
There are also local Iron Blogger communities &lt;a href=&quot;https://mako.cc/copyrighteous/the-global-iron-blogger-network&quot;&gt;around the world&lt;/a&gt;,
or you can start your own with the &lt;a href=&quot;https://github.com/nelhage/iron-blogger/network/members&quot;&gt;open source code&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The premise is simple – submit one post or creation a week. Miss a week and put $5 toward an evening of free drinks for the group.
While meetups have been postponed during the pandemic, we have our fingers crossed on resuming sometime soon.
Subscribe to my 
&lt;a href=&quot;https://ryscheng.substack.com/&quot;&gt;mailing list&lt;/a&gt;
or follow me on &lt;a href=&quot;https://twitter.com/RaymondCheng00&quot;&gt;Twitter&lt;/a&gt;
to get the latest!&lt;/p&gt;
</description>
        <pubDate>Sun, 21 Feb 2021 19:47:18 +0000</pubDate>
        <link>https://www.raymondcheng.net/posts/iron-blogger.html</link>
        <guid isPermaLink="true">https://www.raymondcheng.net/posts/iron-blogger.html</guid>
        
        <category>thoughts</category>
        
        <category>life</category>
        
        
        <category>posts</category>
        
      </item>
    
      <item>
        <title>AutoDapp: a Proposal to Instantly Decentralize Your Existing Web Apps</title>
        <description>&lt;p&gt;The &lt;a href=&quot;https://autodapp.io&quot;&gt;AutoDapp&lt;/a&gt; project aims to automatically convert any existing web or mobile application into a decentralized application (DApp) by changing just a single line of code, starting with &lt;a href=&quot;https://www.discourse.org/&quot;&gt;Discourse&lt;/a&gt; and &lt;a href=&quot;https://www.mediawiki.org/wiki/MediaWiki&quot;&gt;MediaWiki&lt;/a&gt;. This blog post outlines a high-level approach to instantly decentralize popular applications by interposing on the SQL connection between its web server and database. With the unified effort of the open source community, we can accelerate the advent of the decentralized future for millions of users – this is what we’re calling our “One Million” mission.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/diagrams/autodapp-proposal/banner.png&quot; alt=&quot;banner&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;why-arent-there-more-dapp-users&quot;&gt;Why aren’t there more Dapp users?&lt;/h2&gt;

&lt;p&gt;Efforts towards decentralizing the Web have now been a decades-long journey. Companies and smart people join the cause for various reasons, whether &lt;a href=&quot;https://www.eff.org/cyberspace-independence&quot;&gt;ideological&lt;/a&gt;, to shift the &lt;a href=&quot;https://medium.com/openbazaarproject/why-is-decentralization-important-354499db6fb8&quot;&gt;balance of power&lt;/a&gt;, to make their applications &lt;a href=&quot;https://unchainedpodcast.com/why-decentralization-isnt-as-important-as-you-think/&quot;&gt;resilient to censorship&lt;/a&gt;, to protect &lt;a href=&quot;https://knightcolumbia.org/content/protocols-not-platforms-a-technological-approach-to-free-speech&quot;&gt;free speech&lt;/a&gt;, or to encourage greater &lt;a href=&quot;https://onezero.medium.com/why-decentralization-matters-5e3f79f7638e&quot;&gt;innovation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Traditionally, the movement has been defined by technology-first efforts. First, design a decentralized or peer-to-peer subsystem (such as &lt;a href=&quot;https://ipfs.io/&quot;&gt;storage&lt;/a&gt;, &lt;a href=&quot;https://covenantsql.io/&quot;&gt;SQL database&lt;/a&gt;, &lt;a href=&quot;https://www.bigchaindb.com/&quot;&gt;document-oriented database&lt;/a&gt;, &lt;a href=&quot;https://gun.js.org/&quot;&gt;graph database&lt;/a&gt;, &lt;a href=&quot;https://www.bittorrent.com/&quot;&gt;content delivery&lt;/a&gt;, or &lt;a href=&quot;https://ethereum.org/&quot;&gt;application logic&lt;/a&gt;), and find ways to &lt;a href=&quot;https://dweb.archive.org/details/home&quot;&gt;plug it into an existing application’s tech stack&lt;/a&gt;. If you have assembled enough subsystems to write full applications on top, you might try to package it as a platform (&lt;a href=&quot;http://www.freedomjs.org/&quot;&gt;1&lt;/a&gt;, &lt;a href=&quot;https://solid.inrupt.com/&quot;&gt;2&lt;/a&gt;, &lt;a href=&quot;https://blockstack.org/&quot;&gt;3&lt;/a&gt;, &lt;a href=&quot;https://www.textile.io/&quot;&gt;4&lt;/a&gt;). While efforts to decentralize applications existed well before cryptocurrency, even with the recent excitement behind crypto projects such as Ethereum still has not generated mass adoption of decentralization technologies. To date, decentralized application usage still pales in comparison to centralized equivalents. Across the entire blockchain ecosystem at the time of writing, we see less than &lt;a href=&quot;https://www.stateofthedapps.com/stats&quot;&gt;100k&lt;/a&gt; daily active users.&lt;/p&gt;

&lt;p&gt;Why is adoption so low? There are a number of factors, which may not apply equally to all decentralization efforts:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Platform risk&lt;/strong&gt;: There is a chicken and egg problem with new infrastructure projects. Developers of popular applications are wary of depending on new technologies for critical components (like storage) that have not yet scaled reliably to their levels in production settings.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Differentiating new apps&lt;/strong&gt;: Many of the developers building on decentralized platforms are building new applications from scratch without an existing user base. If decentralization is their primary competitive differentiator from alternatives, this is usually an insufficient value proposition for many users to incur the switching costs.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Difficult to debug&lt;/strong&gt;: When things go wrong, you now have to coordinate across many disparate parties to be able to solve the problem.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Worse performance&lt;/strong&gt;: Reliable performance is already hard, even when you have full control over all of your serving infrastructure. Decentralization means you no longer have full control over the machines that your application depends on.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;The goal of the AutoDapp effort is to push the boundaries of taking a low-friction developer-first approach. Can we allow developers to use the existing, mature web stacks that they are used to, enabling them to switch between a centralized cloud deployment and a decentralized deployment with only a single line of code change? If we can do that, we can instantly decentralize many existing popular applications.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For the purposes of this blog, we will narrowly define blockchains as a &lt;a href=&quot;https://en.wikipedia.org/wiki/Byzantine_fault&quot;&gt;Byzantine-fault tolerant&lt;/a&gt; consensus protocol. At its core, all a blockchain does is help all nodes/miners/validators replicate data and achieve agreement on the global ordering of all items on a log or ledger. This can be either a permissionless or permissioned blockchain. While compatible with governance and incentivisation schemes, we will save those topics for a later post.&lt;/p&gt;

&lt;h2 id=&quot;high-level-design&quot;&gt;High-level Design&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/img/diagrams/autodapp-proposal/architecture.png&quot; alt=&quot;architecture&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Our AutoDapp architecture is designed to enable any web application, even with proprietary code, to run in a decentralized setting with the change of one line of configuration: its database connection string.&lt;/p&gt;

&lt;p&gt;For example, all a developer has to do to decentralize their app is change the hostname of their database connection of their web server from:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql://user@host:3306/db &lt;span class=&quot;c&quot;&gt;# original database connection string&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;into this:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql://user@autodapp:3306/db &lt;span class=&quot;c&quot;&gt;# AutoDapp-ed&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Instead of pointing your web application to a centralized database, such as a managed MySQL instance on AWS, the application points to an AutoDapp validator. That’s all it takes to make your application decentralized!&lt;/p&gt;

&lt;p&gt;AutoDapp validators are blockchain validators that also run a copy of the entire backend web stack – the web server and a local database replica. All application state is replicated over a network of AutoDapp validators. A front end client application (e.g. web or mobile) simply needs to be configured to connect to a validator that they trust. If the client doesn’t trust any existing validators, they can also run their own validator. For convenience, we can also use DNS routing to automatically connect users to a validator, requiring &lt;strong&gt;no&lt;/strong&gt; changes to an average user’s user experience.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/diagrams/autodapp-proposal/stack.png&quot; alt=&quot;techstack&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Within each validator, the web server is reconfigured to connect through an AutoDapp SQL proxy. Upon intercepting a SQL command from the application, the AutoDapp proxy will determine if it is a read-write command (will mutate state in the database e.g. CREATE, INSERT, UPDATE, DELETE) or a read-only command (will not mutate state). Read-only commands like SQL selects are forwarded directly to its local database replica, and query results are immediately returned.&lt;/p&gt;

&lt;p&gt;Read-write commands are broadcast to all validators on the network. Every validator checks if it contains valid SQL commands, appends the operation to the next block, and runs a consensus protocol across all validators to agree on the state of the blockchain log. Once committed to the log, each validator executes the agreed upon SQL commands to its local database replica. The application waits until the log and SQL transactions are finalized. As with any journaled file store, new validators replay the log of all SQL commands to construct its replica.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/diagrams/autodapp-proposal/flow.png&quot; alt=&quot;requestflow&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This architecture ensures that all clients, regardless of which validator they are connected to, see a consistent view of the database and all writes are globally ordered by the consensus protocol. This simple architecture works because most web applications are already designed to be stateless at the web server and client. All we would need to do is make sure that the database is consistently replicated across all validators.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pros&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Develop quickly&lt;/strong&gt; using the same exact tools that web/cloud developers use, and inherit all of the applications/libraries/tooling that has been already developed. Many Dapp developers start off by &lt;a href=&quot;https://medium.com/fluence-network/dapp-survey-results-2019-a04373db6452&quot;&gt;using cloud infrastructure&lt;/a&gt; for this very reason.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Censorship-resistance&lt;/strong&gt;: In a permissionless setting, anyone can launch a new validator and start serving the application for their local community. The only way to prevent this is to censor the entire blockchain.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Byzantine fault tolerance&lt;/strong&gt;: Applications become instantly Byzantine fault tolerant, benefitting from the stronger threat model that most blockchains are designed for.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Mature implementations&lt;/strong&gt;: Blockchains are some of the most scrutinized decentralized systems because of their initial use case of cryptocurrency. Discovering flaws in these systems leads to direct monetary gain by the attacker.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Mature operations&lt;/strong&gt;: Similarly, the blockchain community has made significant advancements in building out devops practices for managing large communities of validators, as well as diagnosing issues.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Cons&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Slower writes&lt;/strong&gt;: Because all write operations must wait for commitment on the blockchain (seconds to minutes latency), these operations will be noticeably slower compared to centralized counterparts. In some applications, it may be possible to mask this with a &lt;a href=&quot;https://web.dev/progressive-web-apps/&quot;&gt;progressive web app stack&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Data sensitivity&lt;/strong&gt;: Because all data will be replicated across all validators, applications will need to begin with a governance model of validators you trust. It may be possible to compile applications for secure computing environments (like trusted hardware) in the future.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Higher costs&lt;/strong&gt;: Because we are running multiple copies of the application and storing multiple copies of data, we should expect higher total operational expenses.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Harder to test and debug&lt;/strong&gt;, though the blockchain community is evolving quickly in this space.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;why-is-this-good-for-the-decentralization-community&quot;&gt;Why is this good for the decentralization community?&lt;/h2&gt;

&lt;p&gt;First of all, we can just test en-masse a whole universe of decentralized applications. Instead of dedicating venture money and whole teams to build a copy of XYZ app (but decentralized), we can just AutoDapp the existing application and try it out immediately. We can instantly test product/market fit for our XYZ Dapp. No usage? No skin off my back. Who knows, one of them might stick.&lt;/p&gt;

&lt;p&gt;More importantly, &lt;a href=&quot;https://a16z.com/2020/01/09/progressive-decentralization-crypto-product-management/&quot;&gt;progressive decentralization&lt;/a&gt; is made trivial, enabling companies that truly care about decentralization to focus on building a unique value proposition in their application logic using best-in-class developer tools first, without spending countless man-hours fiddling with a less mature decentralized platform. Companies can focus on delivering 10x value in their search for product/market fit before they spend any resources on decentralizing their application.&lt;/p&gt;

&lt;p&gt;Some applications benefit from decentralization, &lt;a href=&quot;https://unchainedpodcast.com/why-decentralization-isnt-as-important-as-you-think/&quot;&gt;but not all do&lt;/a&gt;. By easily being able to switch between a decentralized deployment and cloud deployment, developers can easily test whether decentralization actually addresses any real risks, such as censorship or malicious threat models.&lt;/p&gt;

&lt;h2 id=&quot;this-sounds-familiar&quot;&gt;This sounds familiar…&lt;/h2&gt;

&lt;h3 id=&quot;how-is-this-different-from-federation&quot;&gt;How is this different from federation?&lt;/h3&gt;

&lt;p&gt;Federation requires the application developer standardize a server-to-server protocol for sharing data between servers. This requires substantial coordination and developer effort, and often ends up &lt;a href=&quot;https://ieeexplore.ieee.org/document/8560907&quot;&gt;poorly implemented&lt;/a&gt;. AutoDapp can be used to automate the data replication between servers, similarly allowing anyone to spin up a new server instance for an application. Imagine if the Gmail application were replicated across Google and Microsoft, vs Gmail and Outlook communicating over a shared email protocol (SMTP).&lt;/p&gt;

&lt;h3 id=&quot;how-is-this-different-from-using-a-blockchain-database&quot;&gt;How is this different from using a blockchain database?&lt;/h3&gt;

&lt;p&gt;Some projects, such as &lt;a href=&quot;https://covenantsql.io/&quot;&gt;CovenantSQL&lt;/a&gt; and &lt;a href=&quot;https://www.bigchaindb.com/&quot;&gt;BigchainDB&lt;/a&gt;, try to lower friction for new Dapp developers by exposing well known APIs (e.g. SQL and MongoDB respectively) over a database replicated on top of a blockchain. While AutoDapp shares many similar technical components to these projects, the focus will be different. Instead of offering a publicly accessible SQL interface to a shared service running on a particular blockchain, we plan to focus our efforts on porting and optimizing existing applications to run end-to-end. This approach may yield different design decisions when it comes to authentication, data privacy, deployment, and performance scaling.&lt;/p&gt;

&lt;h2 id=&quot;proof-of-concept&quot;&gt;Proof of Concept&lt;/h2&gt;

&lt;p&gt;We are currently in the early stages of working on AutoDapp’ed versions of &lt;a href=&quot;https://www.discourse.org/&quot;&gt;Discourse&lt;/a&gt; and &lt;a href=&quot;https://www.mediawiki.org/wiki/MediaWiki&quot;&gt;MediaWiki&lt;/a&gt;. We hope these tools can be useful for existing decentralized companies, many of which are still relying on centralized cloud services for their internal operations (dogfood much?).
One promising application for AutoDapp is censorship-resistant content. Any centralized application that facilitates public discourse or provides invaluable information to the public is at risk of attacks from outside malicious actors or censorship from its central authority. Enabling the AutoDapp-ization of these applications can help safeguard against these scenarios.&lt;/p&gt;

&lt;h2 id=&quot;open-challenges&quot;&gt;Open Challenges&lt;/h2&gt;

&lt;p&gt;We are only in the early stages of this journey, and expect many open challenges, including but not limited to:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Performance&lt;/strong&gt;: It’s hard. Can we make the user experience for AutoDapps just as good as their centralized counterparts?&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Availability&lt;/strong&gt;: How can the AutoDapp community make sure these services stay up and available with &amp;gt;3 9’s of reliability?&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Debugging &amp;amp; Developer Tools&lt;/strong&gt;: How can we make it painless for application developers to build locally and deploy globally with predictable and inspectable outcomes.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Authentication of database writes&lt;/strong&gt;: Web apps are written assuming the web server has root access to the database. That means any (malicious) validator can arbitrarily modify the database. How can we properly authenticate writes?&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Support proprietary applications&lt;/strong&gt;: It’s just a SQL proxy. Why not support proprietary apps? Looking at you &lt;a href=&quot;https://twitter.com/jack/status/1204766078468911106&quot;&gt;Twitter&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Supporting other storage systems&lt;/strong&gt;: Networked filesystems, key-value stores, graph databases, storage systems galore!&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Enabling flexible incentives&lt;/strong&gt;: Developers may want to support both in-app incentives to drive user behavior, as well as validator incentives. AutoDapp needs a clear answer for how these applications can support tokens and how they fit into the broader crypto ecosystem.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;we-need-your-help&quot;&gt;We need your help!&lt;/h2&gt;

&lt;p&gt;Do you think this is cool? Do you want to AutoDapp-ify the Web with us? Join us! We want to keep this an open source community effort. Here’s how to start:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Star us on GitHub: &lt;a href=&quot;https://github.com/autodapp/autodapp&quot;&gt;https://github.com/autodapp/autodapp&lt;/a&gt;   &lt;br /&gt;
Maybe we’ll host the project on an AutoDapp’ed git hosting application in the future. The possibilities are endless!&lt;/li&gt;
  &lt;li&gt;File issues on GitHub. Tell us what applications you want to see supported and tested with AutoDapp!&lt;/li&gt;
  &lt;li&gt;Join the &lt;a href=&quot;https://autodapp.io/&quot;&gt;AutoDapp mailing list&lt;/a&gt; for updates
&lt;!-- Begin Mailchimp Signup Form --&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;link href=&quot;//cdn-images.mailchimp.com/embedcode/horizontal-slim-10_7.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; /&gt;

&lt;style type=&quot;text/css&quot;&gt;
	#mc_embed_signup{background:#fff; clear:left; font:14px Helvetica,Arial,sans-serif; width:100%;}
	/* Add your own Mailchimp form style overrides in your site stylesheet or in this style block.
	   We recommend moving this block and the preceding CSS link to the HEAD of your HTML file. */
&lt;/style&gt;

&lt;div id=&quot;mc_embed_signup&quot;&gt;
&lt;form action=&quot;https://autodapp.us19.list-manage.com/subscribe/post?u=34af0118557807eb5268a76b3&amp;amp;id=f2463eb726&quot; method=&quot;post&quot; id=&quot;mc-embedded-subscribe-form&quot; name=&quot;mc-embedded-subscribe-form&quot; class=&quot;validate&quot; target=&quot;_blank&quot; novalidate=&quot;&quot;&gt;
    &lt;div id=&quot;mc_embed_signup_scroll&quot;&gt;
	&lt;input type=&quot;email&quot; value=&quot;&quot; name=&quot;EMAIL&quot; class=&quot;email&quot; id=&quot;mce-EMAIL&quot; placeholder=&quot;email address&quot; required=&quot;&quot; /&gt;
	&lt;input type=&quot;hidden&quot; value=&quot;blog-0001&quot; name=&quot;SOURCE&quot; class=&quot;&quot; id=&quot;mce-SOURCE&quot; placeholder=&quot;blog-0001&quot; /&gt;
    &lt;!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups--&gt;
    &lt;div style=&quot;position: absolute; left: -5000px;&quot; aria-hidden=&quot;true&quot;&gt;&lt;input type=&quot;text&quot; name=&quot;b_34af0118557807eb5268a76b3_f2463eb726&quot; tabindex=&quot;-1&quot; value=&quot;&quot; /&gt;&lt;/div&gt;
    &lt;div class=&quot;clear&quot;&gt;&lt;input type=&quot;submit&quot; value=&quot;Subscribe&quot; name=&quot;subscribe&quot; id=&quot;mc-embedded-subscribe&quot; class=&quot;button&quot; /&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/form&gt;
&lt;/div&gt;
&lt;!--End mc_embed_signup--&gt;

&lt;p&gt;&lt;strong&gt;Developers! If you want to help contribute to the cause, reach out to us via GitHub or email!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is just the beginning, look out for more blog posts on progress and updates soon.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Blog post by &lt;a href=&quot;https://www.raymondcheng.net&quot;&gt;Raymond Cheng&lt;/a&gt; and &lt;a href=&quot;https://thectozone.com/&quot;&gt;Jeffrey Dash Hsu&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Acknowledgements: Huge thank you to Armani Ferrante, Nick Hynes, Will Scott, Reuven Gonzales, and Christopher Heymann for their helpful feedback and comments.&lt;/p&gt;

&lt;p&gt;To follow the conversation on Hacker News, check it out &lt;a href=&quot;https://news.ycombinator.com/item?id=22814681&quot;&gt;here&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 07 Apr 2020 19:47:18 +0000</pubDate>
        <link>https://www.raymondcheng.net/posts/autodapp-proposal.html</link>
        <guid isPermaLink="true">https://www.raymondcheng.net/posts/autodapp-proposal.html</guid>
        
        <category>projects</category>
        
        <category>decentralization</category>
        
        <category>popular</category>
        
        
        <category>posts</category>
        
      </item>
    
  </channel>
</rss>
